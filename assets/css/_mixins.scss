@mixin media($breakpoint-min) {
  @media (min-width: $breakpoint-min) {
    @content;
  }
}

@mixin media-max($breakpoint-max) {
  @media (max-width: $breakpoint-max - 1px) {
    @content;
  }
}

@mixin media-min-max($breakpoint-min, $breakpoint-max) {
  @media (min-width: $breakpoint-min) and (max-width: $breakpoint-max - 1px) {
    @content;
  }
}

@mixin icon-size($size) {
  &:before {
    height: $size;
    width: $size;
    background-size: $size $size;
    mask-size: $size;
  }
}

@mixin icon($size: 1rem) {
  @include icon-size($size);
  content: '';
  display: inline-block;
  fill: currentColor;
  vertical-align: middle;
  stroke-width: 1px;
  background: none;
  pointer-events: none;
  mask-repeat: no-repeat;
  background-color: map-get($color, text);
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $isMediaQuery, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';
  $emValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;
    $emValues: #{$emValues + $value}em;

    @if $i < $max {
      $remValues: #{$remValues + " "};
      $emValues: #{$emValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;

  // for compatibility with Safari
  @if isMediaQuery {
    #{$property}: $emValues;

  } @else {
    #{$property}: $remValues;
  }
}

@mixin style-price {
  @content;

  .amount {
    &,
    .woocommerce-Price-currencySymbol {
      @content;
    }
  }

  del {
    color: #3c3c3c;
  }
}

@mixin clearfix {
  &:after {
    content: "";
    clear: both;
    display: table;
  }
}

@mixin order-review-border($padding-right: 4rem, $width: 53%) {
  border-right: 1px solid #e6e6e6;
  padding-right: $padding-right;
  width: $width;
}
