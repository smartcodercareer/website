[{"categories":null,"contents":"You should try to find some internet connection to browse here.\n","permalink":"https://devakimbo.com/offline/","tags":null,"title":"Oops, you are offline."},{"categories":null,"contents":"In this article, you will learn the most popular and the simplest design pattern that every web developer and every software developer, in general, should know about. This design pattern is Singleton.\nYou will not only learn how and when to use Singleton but also when not to use it.\nIf you are new to design patterns learning the Singleton is a good place to start.\nIf you are looking for a good introduction to design patterns, check out the article What is a Design Pattern.\nWhat is the Singleton?   Singleton is a creational design pattern, that helps us make sure that our application has no more than one instance of a specific class.\nThat\u0026rsquo;s very handy when we want to use the same object across the application, and when we need to have an easy access to it in any place in the code.\nBy keeping and reusing only one instance of the class, we reduce the application load time, memory consumption, code readability, and maintainability.\nThanks to this pattern, we also don\u0026rsquo;t have to think about how we can access the instance. The solution to this problem is already build-in the design pattern.\nCreating Singleton in Python   Let\u0026rsquo;s implement Singleton for Logger object. This is the most popular scenario when the Singleton pattern is used.\nThe example implementation can look like this.\nclass Logger: _instance = None def __init__(self): if (Logger._instance == None): Logger._instance = self else: raise Exception(self.__class__.__name__ + \u0026#34; is a singleton!\u0026#34;) @staticmethod def instance(): if (Logger._instance == None): Logger._instance = Logger() return Logger._instance The structure of the Logger __init__ function keeps from creating more than one instance of the class. If we try to create subsequent Logger objects, the __init__ function will raise an exception.\nThe structure of __init__ function guarantees that the number of created instances will be limited to one, but our class still needs an easy way to access created instance whenever we will need it.\nThat\u0026rsquo;s why we introduced instance static method. We use it to retrieve Logger instance object whenever we want it.\nAs you may notice, the instance method creates a new object only when it doesn\u0026rsquo;t already exist. That way of accessing static or instance property is called Lazy Initialization and it\u0026rsquo;s another popular design pattern.\nWhile working with Singleton class, we may not create instances of the class by hand. Instead, we use the provided instance static method. When retrieving the object via the instance method, we don\u0026rsquo;t have to think if the object was already created, because it\u0026rsquo;s created on-fly when it\u0026rsquo;s needed. That makes Singleton design pattern very convenient to use.\nWhere can we use Singleton?   Singleton is very simple and easy to use pattern. Sadly, because of that, many unexperienced developers overuse it by trying to adapt many not suitable classes to be Singleton. It makes codebase confusing, and it\u0026rsquo;s a very bad coding practice.\nThere is only one situation when you should consider using Singleton pattern. It may be suitable only when you will need at most one instance of the class across the application, and only if you will need to have access to it in any place in the code.\nIf the scenario that you are considering doesn\u0026rsquo;t match these two requirements, you definitely not need a Singleton.\nConclusion   Singleton is one of the most widely known design patterns in the software development world. Every programming language that supports object-oriented programming let us to create Singletons in one way or the other.\nLearning Singleton is also a good way to start learning design patterns, and every professional software developer is expected to know at least basic ones.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/singleton-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Singleton Design Pattern Python for Web Developers"},{"categories":null,"contents":"Our website uses cookies. Cookies are small files that a site or its service provider transfers to your computer’s hard drive through your Web browser (if you allow) that enables the site’s or service provider’s systems to recognize your browser and capture and remember certain information. For instance, we use cookies to help us remember and process the items in your shopping cart.\nThey are also used to help us understand your preferences based on previous or current site activity, which enables us to provide you with improved services. We also use cookies to help us compile aggregate data about site traffic and site interaction so that we can offer better site experiences and tools in the future.\nWe use cookies to  Help remember and process the items in the shopping cart. Understand and save user’s preferences for future visits. Compile aggregate data about site traffic and site interactions in order to offer better site experiences and tools in the future. We may also use trusted third party services that track this information on our behalf. For remarketing services through 3rd party services.  Cookies we use Depending on the purpose, cookies we use are categorised in one of the following categories: necessary, marketing, analytics.\nNecessary cookies Necessary cookies are cookies created by us to provide core functionalities on the website.\n consent – used to remember if user configured cookie consent configuration. _cfduid – used by Cloudflare as CDN and firewall provider (more details) fr, spin, presence, xs, c_user, sb, dpr, act, datr – used by Facebook Pixel  Marketing cookies Marketing cookies are cookies either set by us or our partners to provide marketing personalization and advertising functionalities on our website, and through partners platforms.\n fr – used in Facebook marketing, to track user interaction with the website (more details)  Analytics cookies Analytics cookies are cookies either set by us or our partners to provide analytics on visitors on our websites and user interactions with our website. It helps us create better user experience and provide more content that users found valuable.\n _ga, _gat, _gid, gat_gtag[GA-ID] – used by Google Analytics to track user interaction with the website (more details)  Disabling Cookies Optional cookie categories can be disabled by configuring cookies consent panel available on every front end page. You can always change your preferences at any time. Necessary cookies can’t be disabled this way, because they are necessary for the website to work properly.\nPlease keep in mind disabling any cookie categories will result in less personalized user experience, and will lower the quality of our content and service. User data is very important for us and let it as make user centric decisions on the content and product we provide. We don’t use collected informations in any other way than described in our Privacy Policy and this document.\n","permalink":"https://devakimbo.com/cookie-policy/","tags":null,"title":"Cookie Policy"},{"categories":null,"contents":"OVERVIEW\nThis website is operated by Appdy LTD. Throughout the site, the terms “we”, “us” and “our” refer to Appdy.net. Appdy.net offers this website, including all information, tools and services available from this site to you, the user, conditioned upon your acceptance of all terms, conditions, policies and notices stated here.\nBy visiting our site and/ or purchasing something from us, you engage in our “Service” and agree to be bound by the following terms and conditions (“Terms of Service”, “Terms”), including those additional terms and conditions and policies referenced herein and/or available by hyperlink. These Terms of Service apply to all users of the site, including without limitation users who are browsers, vendors, customers, merchants, and/ or contributors of content.\nPlease read these Terms of Service carefully before accessing or using our website. By accessing or using any part of the site, you agree to be bound by these Terms of Service. If you do not agree to all the terms and conditions of this agreement, then you may not access the website or use any services. If these Terms of Service are considered an offer, acceptance is expressly limited to these Terms of Service.\nAny new features or tools which are added to the current store shall also be subject to the Terms of Service. You can review the most current version of the Terms of Service at any time on this page. We reserve the right to update, change or replace any part of these Terms of Service by posting updates and/or changes to our website. It is your responsibility to check this page periodically for changes. Your continued use of or access to the website following the posting of any changes constitutes acceptance of those changes.\nSECTION 1 – ONLINE STORE TERMS\nBy agreeing to these Terms of Service, you represent that you are at least the age of majority in your state or province of residence, or that you are the age of majority in your state or province of residence and you have given us your consent to allow any of your minor dependents to use this site.\nYou may not use our products for any illegal or unauthorized purpose nor may you, in the use of the Service, violate any laws in your jurisdiction (including but not limited to copyright laws).\nYou must not transmit any worms or viruses or any code of a destructive nature. A breach or violation of any of the Terms will result in an immediate termination of your Services.\nSECTION 2 – GENERAL CONDITIONS\nWe reserve the right to refuse service to anyone for any reason at any time. You understand that your content (not including credit card information), may be transferred unencrypted and involve (a) transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks or devices. Credit card information is always encrypted during transfer over networks.\nYou agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Service, use of the Service, or access to the Service or any contact on the website through which the service is provided, without express written permission by us.\nThe headings used in this agreement are included for convenience only and will not limit or otherwise affect these Terms.\nSECTION 3 – ACCURACY, COMPLETENESS AND TIMELINESS OF INFORMATION\nWe are not responsible if information made available on this site is not accurate, complete or current. The material on this site is provided for general information only and should not be relied upon or used as the sole basis for making decisions without consulting primary, more accurate, more complete or more timely sources of information. Any reliance on the material on this site is at your own risk.\nThis site may contain certain historical information. Historical information, necessarily, is not current and is provided for your reference only. We reserve the right to modify the contents of this site at any time, but we have no obligation to update any information on our site. You agree that it is your responsibility to monitor changes to our site.\nSECTION 4 – MODIFICATIONS TO THE SERVICE AND PRICES\nPrices for our products are subject to change without notice. We reserve the right at any time to modify or discontinue the Service (or any part or content thereof) without notice at any time. We shall not be liable to you or to any third-party for any modification, price change, suspension or discontinuance of the Service.\nSECTION 5 – PRODUCTS OR SERVICES (if applicable)\nWe have made every effort to display as accurately as possible the colors and images of our products that appear at the store. We cannot guarantee that your computer monitor’s display of any color will be accurate.\nWe reserve the right, but are not obligated, to limit the sales of our products or Services to any person, geographic region or jurisdiction. We may exercise this right on a case-by-case basis. We reserve the right to limit the quantities of any products or services that we offer. All descriptions of products or product pricing are subject to change at anytime without notice, at the sole discretion of us. We reserve the right to discontinue any product at any time. Any offer for any product or service made on this site is void where prohibited.\nWe do not warrant that the quality of any products, services, information, or other material purchased or obtained by you will meet your expectations, or that any errors in the Service will be corrected.\nSECTION 6 – ACCURACY OF BILLING AND ACCOUNT INFORMATION\nWe reserve the right to refuse any order you place with us. We may, in our sole discretion, limit or cancel quantities purchased per person, per household or per order. These restrictions may include orders placed by or under the same customer account, the same credit card, and/or orders that use the same billing and/or shipping address. In the event that we make a change to or cancel an order, we may attempt to notify you by contacting the e‑mail and/or billing address/phone number provided at the time the order was made. We reserve the right to limit or prohibit orders that, in our sole judgment, appear to be placed by dealers, resellers or distributors.\nYou agree to provide current, complete and accurate purchase and account information for all purchases made at our store. You agree to promptly update your account and other information, including your email address and credit card numbers and expiration dates, so that we can complete your transactions and contact you as needed.\nSECTION 7 – OPTIONAL TOOLS\nWe may provide you with access to third-party tools over which we neither monitor nor have any control nor input.\nYou acknowledge and agree that we provide access to such tools ”as is” and “as available” without any warranties, representations or conditions of any kind and without any endorsement. We shall have no liability whatsoever arising from or relating to your use of optional third-party tools.\nAny use by you of optional tools offered through the site is entirely at your own risk and discretion and you should ensure that you are familiar with and approve of the terms on which tools are provided by the relevant third-party provider(s).\nWe may also, in the future, offer new services and/or features through the website (including, the release of new tools and resources). Such new features and/or services shall also be subject to these Terms of Service.\nSECTION 8 – THIRD-PARTY LINKS\nCertain content, products and services available via our Service may include materials from third-parties.\nThird-party links on this site may direct you to third-party websites that are not affiliated with us. We are not responsible for examining or evaluating the content or accuracy and we do not warrant and will not have any liability or responsibility for any third-party materials or websites, or for any other materials, products, or services of third-parties.\nWe are not liable for any harm or damages related to the purchase or use of goods, services, resources, content, or any other transactions made in connection with any third-party websites. Please review carefully the third-party’s policies and practices and make sure you understand them before you engage in any transaction. Complaints, claims, concerns, or questions regarding third-party products should be directed to the third-party.\nSECTION 9 – USER COMMENTS, FEEDBACK AND OTHER SUBMISSIONS\nIf, at our request, you send certain specific submissions (for example contest entries) or without a request from us you send creative ideas, suggestions, proposals, plans, or other materials, whether online, by email, by postal mail, or otherwise (collectively, ‘comments’), you agree that we may, at any time, without restriction, edit, copy, publish, distribute, translate and otherwise use in any medium any comments that you forward to us. We are and shall be under no obligation (1) to maintain any comments in confidence; (2) to pay compensation for any comments; or (3) to respond to any comments.\nWe may, but have no obligation to, monitor, edit or remove content that we determine in our sole discretion are unlawful, offensive, threatening, libelous, defamatory, pornographic, obscene or otherwise objectionable or violates any party’s intellectual property or these Terms of Service.\nYou agree that your comments will not violate any right of any third-party, including copyright, trademark, privacy, personality or other personal or proprietary right. You further agree that your comments will not contain libelous or otherwise unlawful, abusive or obscene material, or contain any computer virus or other malware that could in any way affect the operation of the Service or any related website. You may not use a false e‑mail address, pretend to be someone other than yourself, or otherwise mislead us or third-parties as to the origin of any comments. You are solely responsible for any comments you make and their accuracy. We take no responsibility and assume no liability for any comments posted by you or any third-party.\nSECTION 10 – PERSONAL INFORMATION\nYour submission of personal information through the store is governed by our Privacy Policy. To view our Privacy Policy.\nSECTION 11 – ERRORS, INACCURACIES AND OMISSIONS\nOccasionally there may be information on our site or in the Service that contains typographical errors, inaccuracies or omissions that may relate to product descriptions, pricing, promotions, offers, product shipping charges, transit times and availability. We reserve the right to correct any errors, inaccuracies or omissions, and to change or update information or cancel orders if any information in the Service or on any related website is inaccurate at any time without prior notice (including after you have submitted your order).\nWe undertake no obligation to update, amend or clarify information in the Service or on any related website, including without limitation, pricing information, except as required by law. No specified update or refresh date applied in the Service or on any related website, should be taken to indicate that all information in the Service or on any related website has been modified or updated.\nSECTION 12 – PROHIBITED USES\nIn addition to other prohibitions as set forth in the Terms of Service, you are prohibited from using the site or its content: (a) for any unlawful purpose; (b) to solicit others to perform or participate in any unlawful acts; (c) to violate any international, federal, provincial or state regulations, rules, laws, or local ordinances; (d) to infringe upon or violate our intellectual property rights or the intellectual property rights of others; (e) to harass, abuse, insult, harm, defame, slander, disparage, intimidate, or discriminate based on gender, sexual orientation, religion, ethnicity, race, age, national origin, or disability; (f) to submit false or misleading information; (g) to upload or transmit viruses or any other type of malicious code that will or may be used in any way that will affect the functionality or operation of the Service or of any related website, other websites, or the Internet; (h) to collect or track the personal information of others; (i) to spam, phish, pharm, pretext, spider, crawl, or scrape; (j) for any obscene or immoral purpose; or (k) to interfere with or circumvent the security features of the Service or any related website, other websites, or the Internet. We reserve the right to terminate your use of the Service or any related website for violating any of the prohibited uses.\nSECTION 13 – DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY\nWe do not guarantee, represent or warrant that your use of our service will be uninterrupted, timely, secure or error-free.\nWe do not warrant that the results that may be obtained from the use of the service will be accurate or reliable.\nYou agree that from time to time we may remove the service for indefinite periods of time or cancel the service at any time, without notice to you.\nYou expressly agree that your use of, or inability to use, the service is at your sole risk. The service and all products and services delivered to you through the service are (except as expressly stated by us) provided ‘as is’ and ‘as available’ for your use, without any representation, warranties or conditions of any kind, either express or implied, including all implied warranties or conditions of merchantability, merchantable quality, fitness for a particular purpose, durability, title, and non-infringement.\nIn no case shall Appdy, our directors, officers, employees, affiliates, agents, contractors, interns, suppliers, service providers or licensors be liable for any injury, loss, claim, or any direct, indirect, incidental, punitive, special, or consequential damages of any kind, including, without limitation lost profits, lost revenue, lost savings, loss of data, replacement costs, or any similar damages, whether based in contract, tort (including negligence), strict liability or otherwise, arising from your use of any of the service or any products procured using the service, or for any other claim related in any way to your use of the service or any product, including, but not limited to, any errors or omissions in any content, or any loss or damage of any kind incurred as a result of the use of the service or any content (or product) posted, transmitted, or otherwise made available via the service, even if advised of their possibility. Because some states or jurisdictions do not allow the exclusion or the limitation of liability for consequential or incidental damages, in such states or jurisdictions, our liability shall be limited to the maximum extent permitted by law.\nSECTION 14 – INDEMNIFICATION\nYou agree to indemnify, defend and hold harmless Appdy and our parent, subsidiaries, affiliates, partners, officers, directors, agents, contractors, licensors, service providers, subcontractors, suppliers, interns and employees, harmless from any claim or demand, including reasonable attorneys’ fees, made by any third-party due to or arising out of your breach of these Terms of Service or the documents they incorporate by reference, or your violation of any law or the rights of a third-party.\nSECTION 15 – SEVERABILITY\nIn the event that any provision of these Terms of Service is determined to be unlawful, void or unenforceable, such provision shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion shall be deemed to be severed from these Terms of Service, such determination shall not affect the validity and enforceability of any other remaining provisions.\nSECTION 16 – TERMINATION\nThe obligations and liabilities of the parties incurred prior to the termination date shall survive the termination of this agreement for all purposes.\nThese Terms of Service are effective unless and until terminated by either you or us. You may terminate these Terms of Service at any time by notifying us that you no longer wish to use our Services, or when you cease using our site.\nIf in our sole judgment you fail, or we suspect that you have failed, to comply with any term or provision of these Terms of Service, we also may terminate this agreement at any time without notice and you will remain liable for all amounts due up to and including the date of termination; and/or accordingly may deny you access to our Services (or any part thereof).\nSECTION 17 – ENTIRE AGREEMENT\nThe failure of us to exercise or enforce any right or provision of these Terms of Service shall not constitute a waiver of such right or provision.\nThese Terms of Service and any policies or operating rules posted by us on this site or in respect to The Service constitutes the entire agreement and understanding between you and us and govern your use of the Service, superseding any prior or contemporaneous agreements, communications and proposals, whether oral or written, between you and us (including, but not limited to, any prior versions of the Terms of Service).\nAny ambiguities in the interpretation of these Terms of Service shall not be construed against the drafting party.\nSECTION 18 – GOVERNING LAW\nThese Terms of Service and any separate agreements whereby we provide you Services shall be governed by and construed in accordance with the laws of United Kingdom.\nSECTION 19 – CHANGES TO TERMS OF SERVICE\nYou can review the most current version of the Terms of Service at any time at this page. We reserve the right, at our sole discretion, to update, change or replace any part of these Terms of Service by posting updates and changes to our website. It is your responsibility to check our website periodically for changes. Your continued use of or access to our website or the Service following the posting of any changes to these Terms of Service constitutes acceptance of those changes.\nSECTION 20 – CONTACT INFORMATION\nQuestions about the Terms of Service should be sent to us at contact@devakimbo.com.\n","permalink":"https://devakimbo.com/terms-of-service/","tags":null,"title":"Terms of Service"},{"categories":null,"contents":"We haven\u0026rsquo;t announced that yet but we are planning something big, something that can\u0026rsquo;t be found anywhere else on the internet.\nCoder career is hard and there is no place for doing mistakes because they cost a lot, not only in wasted time and money but also in missed opportunities. The programming landscape is tricky and it never was as complex as it\u0026rsquo;s now, thanks to the number of emerging technologies and old but stable tech stack.\nIf you take your coder career and life seriously Coder Career Accelerator is the place and community you want to join.\nCoder Career Accelerator is for you if:\n you want to get your first coder job fast ⏳ you don\u0026rsquo;t know which technologies to learn to start earning money ⚙️ you want to earn money while learning to code 💡 you want to become the highest-paid coder 💰 you want to build a skillset that will never get obsolete 🤺 you want to code for living without sacrificing your life 🏝️  If any of the above resonates with you join the waiting list today, we will let you know when we will be ready to launch 🚀\n","permalink":"https://devakimbo.com/coder-career-accelerator/","tags":null,"title":"Coder Career Accelerator 🚀"},{"categories":null,"contents":"This privacy policy has been compiled to better serve those who are concerned with how their “Personally identifiable information” (PII) is being used online. PI is information that can be used on its own or with other information to identify, contact, or locate a single person, or to identify an individual in context. Please read our privacy policy carefully to get a clear understanding of how we collect, use, protect or otherwise handle your Personally Identifiable Information in accordance with our website.\nWhat personal information do we collect from the people that visit our blog, website or app? When ordering or registering on our site, as appropriate, you may be asked to enter your name, email address, mailing address, credit card information or other details so that we can provide our services to you.\nWhen do we collect information? We collect information from you when you register on our site, place an order, subscribe to a newsletter, fill out a form or enter information on our site.\nHow do we use your information? We may use such information in the following ways:\n To personalize your experience on our site and to allow us to deliver the type of content and product offerings in which you are most interested. To improve our website in order to better serve you. To allow us to better service you in responding to your customer service requests. To administer a contest, promotion, survey or other site feature. To quickly process your transactions. To send periodic emails regarding your order or other products and services. How do we protect the information we receive? Our site is reviewed on a regular basis for security vulnerabilities in order to make your visit to our site as safe as possible.  Your personal information is contained behind secured networks and is only accessible by a limited number of persons who have special access rights to such systems, and are required to keep the information confidential. In addition, all sensitive/credit information you supply is encrypted via Secure Socket Layer (SSL) technology. We do not store credit/debit card information on our systems.\nWe implement a variety of security measures when a user places an order enters, submits, or accesses their information to maintain the safety of your personal information.\nAll transactions are processed through a gateway provider and are not stored or processed on our servers.\nDo we use “cookies”? Yes. For more information about cookies we are using visit our Cookies Policy page.\nHow can you opt out, remove or modify information you have provided to us? You can request to have your information removed by contacting us via email contact@devakimbo.com or through the contact form.\nPlease note that we may maintain information about an individual sales transaction in order to complete that transaction and for record keeping purposes.\nUnsubscribing from email list To unsubscribe, opt out from the email list follow the link in email footer.\nThird Party Disclosures We do not sell, trade, or otherwise transfer to outside parties your personally identifiable information unless we provide you with advance notice. This does not include website hosting partners and other parties who assist us in operating our website, conducting our business, or servicing you, so long as those parties agree to keep this information confidential. We may also release your information when we believe release is appropriate to comply with the law, enforce our site policies, or protect ours or others’ rights, property, or safety.\nHowever, non-personally identifiable visitor information may be provided to other parties for marketing, advertising, or other uses.\nThird party Links Occasionally, at our discretion, we may include or offer third party products or services on our website. These third party sites have separate and independent privacy policies. We therefore have no responsibility or liability for the content and activities of these linked sites. Nonetheless, we seek to protect the integrity of our site and welcome any feedback about these sites.\nTransfer Of Your Personal Information Your information, including personal information, may be transferred to — and maintained on — computers located outside of your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from your jurisdiction.\nWe will take all steps reasonably necessary to ensure that your data is treated securely and in accordance with this Privacy Policy and no transfer of your personal information will take place to an organization or a country unless there are adequate controls in place including the security of your data and other personal information.\nDisclosure Of Your Personal Information If we are involved in a merger, acquisition or asset sale, your personal information may be transferred. We will provide notice before your personal information is transferred and becomes subject to a different Privacy Policy.\nUnder certain circumstances, we may be required to disclose your personal information if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).\nRetention of Your Personal Information We will retain your personal information only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use your information to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.\nInformation Regarding Your Data Protection Rights Under General Data Protection Regulation (GDPR) For the purpose of this Privacy Policy, we are a Data Controller of your personal information.\nIf you are from the European Economic Area (EEA), our legal basis for collecting and using your personal information, as described in this Privacy Policy, depends on the information we collect and the specific context in which we collect it.\nWe may process your personal information because:  You have given us permission to do so The processing is in our legitimate interests and it’s not overridden by your rights For payment processing purposes To comply with the law  If you are a resident of the European Economic Area (EEA) If you are a resident of the European Economic Area (EEA), you have certain data protection rights.\nIn certain circumstances, you have the following data protection rights:\n The right to access, update or to delete the personal information we have on you The right of rectification The right to object The right of restriction The right to data portability The right to withdraw consent  Please note that we may ask you to verify your identity before responding to such requests.\nYou have the right to complain to a Data Protection Authority about our collection and use of your personal information. For more information, please contact your local data protection authority in the European Economic Area (EEA).\nIf you are California consumer under California Consumer Privacy Act (CCPA) “Do Not Sell My Personal Information” Notice for California consumers under California Consumer Privacy Act (CCPA)\nUnder the CCPA, California consumers have the right to:\n Request that a business that collects a consumer’s personal data disclose the categories and specific pieces of personal data that a business has collected about consumers. Request that a business delete any personal data about the consumer that a business has collected. Request that a business that sells a consumer’s personal data, not sell the consumer’s personal data.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\nService Providers We employ third party companies and individuals to facilitate our Website (“Service Providers”), to provide our Website on our behalf, to perform Website-related services or to assist us in analyzing how our Website is used. These third-parties have access to your personal information only to perform these tasks on our behalf and are obligated not to disclose or use it for any other purpose.\nAnalytics Google Analytics is a web analytics service offered by Google that tracks and reports website traffic. Google uses the data collected to track and monitor the use of our Service. This data is shared with other Google services. Google may use the collected data to contextualize and personalize the ads of its own advertising network.\nYou can opt-out of having made your activity on the Service available to Google Analytics by installing the Google Analytics opt-out browser add-on. The add-on prevents the Google Analytics JavaScript (ga.js, analytics.js, and dc.js) from sharing information with Google Analytics about visits activity.\nYou can opt-out of having made your activity on the Service available to Google Analytics by disabling Analytics option in cookies consent as described in our Cookie Policy.\nFor more information on the privacy practices of Google, please visit the Google Privacy \u0026amp; Terms web page: http://www.google.com/intl/en/policies/privacy/\nMarketing Facebook Pixel Facebook Pixel is a web service offered by Facebook that tracks website traffic and user interactions to create personalized and retargeting marketing campaigns. Facebook uses the data collected to track and monitor the use of our Service.\nYou can opt-out of having made your activity on the Service available to Facebook by disabling Marketing option in cookies consent as described in our Cookie Policy.\nFor more information on the privacy practices of Facebook, please visit the Facebook Privacy \u0026amp; Terms web page: https://www.facebook.com/policy.php\nGoogle Adwords Google Adwords is an advertising service provided by Google. We may use Google Adwords for retargeting advertisement purposes.\nYou can opt-out of having made your activity on the Service available to Google Adwords by disabling Marketing option in cookies consent as described in our Cookie Policy.\nPayments processors We provide paid products and/or services on our Website. In that case, we use third-party service Stripe for payment processing (e.g. payment processors).\nWe will not store or collect your payment card details. That information is provided directly to our third-party payment processors whose use of your personal information is governed by their Privacy Policy. These payment processors adhere to the standards set by PCI-DSS as managed by the PCI Security Standards Council.\nContacting Us If there are any questions regarding this privacy policy you may contact us contact@devakimbo.com.\n","permalink":"https://devakimbo.com/privacy-policy/","tags":null,"title":"Privacy Policy"},{"categories":null,"contents":"As you probably notice, there are plenty of programming languages, and perhaps it\u0026rsquo;s harder than ever to choose anything because there is so much noise. Everyone is recommending the programming language they know as the silver bullet, and the ideal way to start in IT.\nBut this is terrible advice, because if you learn something that you don\u0026rsquo;t need in the long run, and you won\u0026rsquo;t be using it daily soon, you will forget it, and your time and money investment will be wasted. Nobody wants that.\nSo what programming language to learn first?\nHow we used to learn programming   Let me tell you how it used to work in the past.\nIf you would start learning programming between 2000-2010 (and earlier), people will tell you, learn Pascal first because it\u0026rsquo;s the easiest programming language to learn, later it would be much easier to learn anything.\nThere were plenty of books with code examples, written in Pascal.\nThe problem with Pascal was you can\u0026rsquo;t build anything serious, with it, anything that has a market value. The only value in this language was that the semantic was very simple, so it was a helpful tool to understand basic programming concepts and algorithms.\nIf you are in language learning, not only programming but language used for communications, maybe you heard about Esperanto. Esperanto by itself, it\u0026rsquo;s fully-fledged communication language, but it\u0026rsquo;s an artificial language, none of the countries use it as it\u0026rsquo;s native. It was created solely to break the communication gap between European nations.\nWhy this language is interesting is that there is a common belief that if you invest only one year learning Esperanto, it would be much easier for you to learn European languages like French, or Italian, later.\nIt\u0026rsquo;s exactly the same story as with Pascal.\nToday, almost any programming language can be used for the purpose of learning the basic concepts. From there, you can move to learn other things.\nIf you want to follow the path \u0026ldquo;learn any language, and my is the best, let me show you what I have got\u0026rdquo;, keep in mind that you will probably land up nowhere building skills that you don\u0026rsquo;t need and eventually forget everything soon after.\nHow we learn programming these days   What you can do instead, and what I found most successful programmers do, is to narrow down your interest to a specific market niche, to just one technology, and learn it. Explore the niche further and then go and see what\u0026rsquo;s outside if you feel that you need it too.\nWhat I mean by that is, depending on your goals and motivation, you should decide if you want to do mobile apps development, web development, frontend, backend, full-stack development, or maybe DevOps.\nYou should choose a specialization and then choose one of the programming languages that is used in this specific niche and start creating.\nIf you don\u0026rsquo;t know which path to choose, write the comment below, so I will try to help.\nSo what\u0026rsquo;s the best for mobile apps development?   So, for example, if you want to build mobile apps, you should narrow your interest to one platform, let say iOS. But it can also be Android if you prefer. From there, the best choice these days is to learn native platform languages.\nI wrote a verbose post about it What Programming Language To Learn For App Development In 2021. If you are after the mobile app development, don\u0026rsquo;t forget to check it out.\nI want to be a web developer   If you\u0026rsquo;re going to become a web developer, things are a bit more complicated. Not only because there are at least a couple of technologies you have to use to build any website but also because you build websites for many different browsers, and especially Microsoft Internet Explorer made it very hard for programmers.\nThis niche also has plenty of smaller niches, so it can look very overwhelming. But the good news is you can also find essentials here, that you can focus on. If you go after building websites, you have to know how to structure websites using HTML5 and do at least basics of styling by using CSS.\nWhen you learn how to build websites by using only these two, then you should go after Javascript. But you don\u0026rsquo;t need Javascript to build websites. Javascript is only for making websites more interactive. You can create your portfolio by only using HTML5 and CSS if you want to be a web developer.\nI want to be frontend developer (aka backend hater)   If you want to be a frontend developer, you have to know the essentials of web development mentioned above, plus master at least one of Javascript frameworks like React, Angular, or Vue. Even if the frontend can also mean user interface for desktop or mobile application, frontend development most often relates to web applications.\nIn this position, Javascript, ES6, and Typescript are mandatory, so you really should focus on learning these languages as soon as you know HTML5 and CSS3.\nI want to be a backend developer (aka frontend hater)   If you want to be a backend developer, the learning curve is pretty steep.\nFirst and foremost, you have to learn the Linux command line (which is not only shell programming language but also command-line tools) and at least one of the scripting languages, in which the most widely used one is Python.\nThey are some other tools that you have to learn before you could land your first backend job, but the Linux command line and Python are your best bet. Double-check that, if you are targeting a specific niche, you may be learning C++ or other languages instead. Track the requirements in the offers you wish to apply for.\nI want to be a full-stack developer (aka I love them all)   If you are after full-stack development, this is the land mine most of the people stumble upon without knowing. Full-stack development is when you put a lot of frontend and a lot of backend development together.\nWhy do I say \u0026ldquo;a lot\u0026rdquo; instead \u0026ldquo;all in\u0026rdquo;? That\u0026rsquo;s because if you are a full-stack developer nobody demands that you are the master of frontend and backend. You just have to know how to code and connect them.\nBut still, it\u0026rsquo;s a lot of stuff to learn to be able to do it. It\u0026rsquo;s almost impossible for newbies to jump into full-stack development and succeed.\nI know they are courses and books that will teach you how to do that by teaching you frontend first and backend the second. But please don\u0026rsquo;t get confused by the promises made by frameworks like Ruby on Rails, Django, Laravel, etc. that they will make things simple. Yes, they help, but you have to know all the basics already; otherwise, you will probably fail like most of the people.\nConclusion   As you can see, there is no simple answer to the question \u0026ldquo;what programming language should learn first in 2021\u0026rdquo;. It all depends on what you want to specialize in.\nIf you narrow your interest down to a specific niche, choose only one programming language that you will be using daily, and learn basic concepts as mentioned above, you have much bigger chances to succeed.\nIf you have any questions related to learning programming languages, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nStay focused!\n","permalink":"https://devakimbo.com/blog/what-programming-language-to-learn-first-in-2021/","tags":["Full Stack","IT Career","Mobile","Programming","IT Career"],"title":"What Programming Language to Learn First in 2021"},{"categories":null,"contents":"In this article, we will set up the entire python development environment from scratch on Windows, macOS, and Linux. So if you are using any of these and you want to have python up and running you are in the right place.\n  This post is part of complete FREE Python Developer Crash Course that we publish on YouTube. We publish programming learning and IT Career videos advice multiple times a week so remember to subscribe to not miss any of them.\nTo checkout entire course click the link.\nTable of Contents    Python setup on Windows  Installing Visual Studio Code on Windows   Python setup on macOS  Installing Python on macOS via python.org Installing Python on macOS via Homebrew Installing Python on macOS via pyenv - the best option Visual Studio Code Installation on macOS   Python setup on Linux  Installing Python on Linux via a package manager Installing Python on Linux via pyenv Visual Studio Code Installation on Linux   Visual Studio Code Final Setup Conclusion  After installing python we will install and configure Visual Studio Code. You may ask\u0026hellip;\nWhy Visual Studio Code?\nVisual Studio Code is the easiest to use and most feature-rich code editor available and it\u0026rsquo;s free.\nI know maybe you heard that there are better options like VIM or Emacs, and there is a lot of truth in it. But there is a steep learning curve to learn them and takes a lot of time to get productive with them.\nWhile Visual Studio Code gives us all the features we need without spending hours on installing plugins and extra configuration. Everything works almost out of the box.\nOk, let\u0026rsquo;s get started with installing Python on Windows.\nInstalling Python on Windows   The recommended way to install Python on Windows is to go to python.org and download the installation bundle from there. So let\u0026rsquo;s do it.\nOn python.org, hover over Downloads and click Windows. On the next page, we look for the executable installer and click on that.\nThat will open the instalation window. What\u0026rsquo;s important here is to check \u0026ldquo;Add Python 3.8 to PATH\u0026rdquo;. That will make python available in the Command Prompt, just by typing python, without typing the entire path to the python interpreter.\nNext click installs now.\nAfter installation finish. We will see this window.\nFrom now on we should be able to use python.\nInstalling Visual Studio Code on Windows   Installing Visual Studio Code on Windows is very easy, just head over to code.visualstudio.com and download the installation package. So let\u0026rsquo;s do it.\nMake sure you check \u0026ldquo;add to path\u0026rdquo; which will let you open python files directly from the command prompt.\nAnd check \u0026ldquo;Register code as an editor for supported file types\u0026rdquo;, as well.\nOther options are optional.\nAfter installation, let\u0026rsquo;s check if the Visual Studio Code works as expected.\nAt this point, Visual Studio Code should work well.\nAny further configuration steps will be the same for all the platforms and they will be covered in the last section of this tutorial. You can jump there directly if you want.\nPython setup on macOS   To install Python on macOS, we have a couple of options.\nInstalling Python on macOS via python.org   The first way is to go to the python.org and download the installation package from there, but don\u0026rsquo;t do that. It\u0026rsquo;s the worst way to install Python on Mac.\nThe problem with installing Python that way is that. You will not be able to manage multiple versions of Python and it will be hard to do an update when the new version will show up.\nInstalling Python on macOS via Homebrew   What you can do instead is to use Homebrew. If you don\u0026rsquo;t know this tool yet, Homebrew is an unofficial package manager for Mac.\nIf you haven\u0026rsquo;t installed it yet head over to brew.sh. And follow the instruction on the page.\nWhen you have Homebrew installed you can simply type in the Terminal \u0026ldquo;brew install python\u0026rdquo; to install Python. But don\u0026rsquo;t do that.\nIt\u0026rsquo;s actually not the best way to install Python on Mac.\nIt\u0026rsquo;s still better to install python this way rather than using python.org. Because it would be fairly easy to switch between different python versions and update python later on.\nAnd it\u0026rsquo;s great because we never know when we will need to switch to different Python versions.\nBut there is an even better way.\nInstalling Python on macOS via pyenv - the best option   The best way to install Python on Mac is to use a tool called pyenv, which stands for Python version manager.\nIt can manage multiple Python versions and make it easy to switch, update or delete them if necessary.\nIt also lets us choose Python version per project and it installs all the files in the user directory so it will not make a mess in the file system. Which is perfect.\nTo install it we will use Homebrew. Just open the terminal, by typing Terminal in the spotlight and type \u0026ldquo;brew install pyenv\u0026rdquo;.\nNow before we start using it we need to initiate it. We do that by running pyenv init - in the terminal.\nWe will actually need to run it every time we open the new terminal, so to automate it add this code to your ~/.bashrc or ~/.bash_profile or another config file for the shell you are using and type those 3 lines.\nif command -v pyenv 1\u0026gt;/dev/null 2\u0026gt;\u0026amp;1; then eval \u0026#34;$(pyenv init -)\u0026#34; fi After that every time you open a new terminal the pyenv will be automatically initiated.\nYou can install the version of python you want for example pyenv install 3.8.2 and make it available everywhere type pyenv global 3.8.2.\nLet\u0026rsquo;s check which version we are using after that.\nAs you see, the python command calls the Python version we just installed. Great!\nYou can see the full list of available pyenv options by just typing \u0026ldquo;pyenv\u0026rdquo; in the Terminal without any parameters.\nNext, we will install the Visual Studio Code.\nVisual Studio Code Installation on macOS   We install Visual Studio Code on Mac in the same way we do it on Windows. Just head over to the code.visualstudio.com and download related package and install it.\nAny further configuration steps will be the same for all the platforms so they will be covered in the last part of the tutorial. You can jump there directly if you want.\nPython setup on Linux   Installing Python on Linux via a package manager   To install Python on Linux you can use the build-in package manager provided with your Linux.\nBut you will stumble upon similar problems as we had with macOS and Homebrew.\nIt will be hard to manage multiple versions of Python at the same time. So installing Python via package manager is not the best way to install Python on Linux.\nWhat you can do instead is to install pyenv Python versions manager as we did for macOS. But we will do it in a bit different way.\nInstalling Python on Linux via pyenv   To install pyenv we will use pyenv-installer. Just head over to the project page and follow the installation instructions.\nAfter that, you will end up with pyenv installed on you Linux.\nFor the pyenv configuration check the pyenv section for macOS in this tutorial.\nVisual Studio Code Installation on Linux   The recommended way of installing Visual Studio Code on Linux is via build-in package manager. Using a package manager is always preferred way because it\u0026rsquo;s easy to upgrade or uninstall them later.\nIf you use Debian like distribution just follow the guidance provided on this website wiki.debian.org/VisualStudioCode.\nAlternatively, you can just go to the Visual Studio Code page and download the installation bundle from there.\nVisual Studio Code Final Setup   We can now do the final configuration of the Visual Studio Code and check if everything is working.\nFrom now on I will work only on Windows, but all the steps are the same for any other platform.\nBy default VSC doesn\u0026rsquo;t support Python, we have to install additional plugin.\nLet\u0026rsquo;s click on the Extensions and type \u0026lsquo;Python\u0026rsquo;. It will show plenty of results but we are interested only in the plugin provided by Microsoft. Here it is.\nYou can check the list of all the provided features.\nLet\u0026rsquo;s install it.\nIt\u0026rsquo;s everything you need to get started.\nFrom this moment on when we will work with any python file, the editor will recognize it automatically.\nConclusion   Congratulations we just reach the finish line of this tutorial and you should have python development environment up and running.\nIf you, want to learn Python fast check out my complete FREE Python Developer Crash Course on our YouTube channel.\n","permalink":"https://devakimbo.com/blog/python-3-installation-tutorial-for-beginners/","tags":["App Development","Beginner","Python","Python3","Tutorial","Web Development"],"title":"Python 3 Installation Tutorial for Beginners"},{"categories":null,"contents":"A global pandemic has hit hard every industry, and IT is no exception. This article is about what is the ugly, the bad, and good about the current situation in the IT market. As you probably noticed, I put these into reversed order, that\u0026rsquo;s because I\u0026rsquo;m from the West and people from the West like happy endings. So let\u0026rsquo;s leave what\u0026rsquo;s good to the very end, and let\u0026rsquo;s have a look at what\u0026rsquo;s ugly and bad about the current situation first.\nThe Ugly   People are losing their jobs   You may hear of some markets are doing well like video conferencing, telemedicine, e-commerce, delivery, food groceries, streaming games, SaaS, security, telecoms, and online advertising, while other declines.\nSadly, for us IT individuals, many of us lost their jobs, many projects were delayed or canceled. It happened before most of the countries adapted to the situation and put employee retention schemas at a place to protect workers from being laid off. Sadly it didn\u0026rsquo;t work in every case.\nThe contractors were out of luck the most. As they are not protected by the employer-employee regulations, many contracts were suddenly canceled.\nFake job positions   Even if we can find job opportunities on job boards, many of them are just baits and these opportunities don\u0026rsquo;t exist at all. The recruiting companies just try to build their candidate database, and there is no real opportunity behind these offers.\nEven though some of the opportunities still exist but most of them are only for employee positions, the market for contractors dried out.\nThe Bad   Less demand for cutting edge technologies   The demand for cutting edge technologies like React, Angular, Vue, AI, VR, and machine learning used by startups tanked.\nThis is related to the huge slow down of the startup industry, and cancelation of new projects.\nThere are still a lot of opportunities for programmers - as I will describe later - but fancy, modern technologies are sadly not in that equation.\nNew technologies have no much chance to emerge   Because the market gets heavily chilled, some of the new technologies like Flutter will not grow as fast as they could. Other popular modern technologies that already build their position including React, React Native, Angular, Vue, Node will also slow down.\nIn the crisis, people are reluctant to invest in relatively new things and prefer to stick to the solutions used to work in the past.\nBecause many companies, cancel or postpone their projects, there is no space for applying new technology stack.\nThe only projects that guarantee stable jobs these days are the ones on the maintenance stage, which mature codebase and most often obsolete tech stack.\nThe Good   Things are not entirely gloomy, though. There are good things that Covid-19 suddenly bring to the tech industry. Let\u0026rsquo;s have a closer look.\nRemote work is no longer taboo   If you like the idea of working remotely, here is good news for you. The current situation made many companies, which were reluctant for remote working switch their office workspaces to remote allowing their employees to work from home. They had to adapt to new systems and new ways of management. It\u0026rsquo;s unlikely they will turn it down entirely when the situation will back to normal.\nWhile in many companies productivity will go up, the argument that \u0026ldquo;people working remotely are less productive\u0026rdquo;, and \u0026ldquo;they don\u0026rsquo;t work when we don\u0026rsquo;t watch them\u0026rdquo; will finally be busted.\nIf you are an employee and during the Covid-19 outbreak you work from home, your job will likely become much more flexible after the pandemic is over.\nMany job opportunities get upgraded to remote   If the company wants to hire during the Covid-19 outbreak it has to provide remote workspace. This instantly upgrades all the opportunities on the market to a remote. Even though most of the time their description states as \u0026ldquo;remote temporary\u0026rdquo;, it\u0026rsquo;s very unlikely they will become so stiff about work from the office after the situation will back to normal.\nMore money for remote workers   Regular and remote positions used to not be rewarded equally. Employees and contractors used to earn less for the same work done if their position was remote. Employers thought that \u0026ldquo;because we give you the freedom of working from home, it\u0026rsquo;s fair to pay you less\u0026rdquo;, while demanding the same level of productivity and commitment at the same time.\nEven if it\u0026rsquo;s proven that remote employees are more productive - I omit cheaters here - most of the time it was very hard to have merit discussion with the management about remote working. The urge to micromanage people, and demonstrate manager high status is too strong.\nWhile remote positions will become more common, the experienced developers, who know their value, will not want to work for less while working remotely than their market value. So we can expect that the salary gap between employees and remote employees will be much smaller.\nPlenty of freelance opportunities   Lots of people got stuck in their homes. Some of them decided to start a business, sell things online, or provide remote services or expert advice. All of these new, small businesses as well as the old ones, need websites, online shops, designers, email service, advertisement, brand identity, and many other technical services. That gives us plenty of opportunities for freelancing and creates space for individuals who always wanted to give freelance a shoot, but they couldn\u0026rsquo;t found their way to the market.\nNow they have a big second chance to find the first client and get started.\nAs mentioned before, new opportunities mostly involve technologies that have a stable market position, are proven and suitable for small businesses' needs. These technologies are Wordpress, eCommerce platforms like Magento, Woocommerce or Shopify, HTML/CSS/Javascript, PHP - a quite traditional stack. Nothing fancy, but proven to do the job.\nIf you are already familiar with these technologies you can get these opportunities right away, if you used to work with fancier things, you can easily learn those skills.\nTeaching opportunities   As many people work from home or get paid just to stay in the house, some of them decided to learn new skills including programming. This creates a big opportunity for people who want to start teaching others how to code, become mentors, or create online courses. Everything is done from the comfort of our home. Nice!\nGrowth of new remote technologies   Since we know Covid-19 is not a weekly incident, many companies started creating remote solutions to help adapt their clients' workspaces to remote environments. Because of increasing market need, these technologies will not only last but will evolve rapidly ridding on the current trend. While they will be growing so the remote workspaces will evolve and become more and more dependent on those solutions.\nRemote working heavily relies on technology and internet connection, and also requires new ways of management.\nThe methodologies that are put into action today will last for months, maturating, and actually becoming a new default for many companies. For many of them, it\u0026rsquo;s unlikely they will all switch back to the old way of doing things when the pandemic will be over.\nConclusion   The world will never be the same after the Covid-19. While being aware of the challenges this situation is causing us, many of the solutions and market trends created today will become our new reality tomorrow and years to come.\nThese trends are not something that happens thanks to the virus but rather the pandemic becomes a catalyst for the changes that will happen anyway but in a much slower paste.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\n","permalink":"https://devakimbo.com/blog/how-covid-19-have-killed-programming-market/","tags":["IT Career","Programming"],"title":"How Covid 19 Have Killed Programming Market"},{"categories":null,"contents":"In this post, we are gonna talk about why it\u0026rsquo;s harder than ever to learn programming today. I will share with you my arguments, with a couple of tips on how to deal with some of the most irritating issues.\nHey, I know this topic is controversial because the common belief is we are living in amazing times, and there is so much free and paid content. The thing is the more is not always better.\nToo many technologies   If you want to become a software developer, not only a web developer, but a professional programmer, in general, you will face more options to choose from than we ever had.\nWhen I first started learning programming, there were only a couple of serious technologies that would give me any chance to get a job. Back then, I know that some of the technologies we\u0026rsquo;re already falling behind, and they are kept alive only to support legacy applications.\nThe ones that would give me access to new projects and were trending were Java (with plenty of related frameworks), PHP, or C#, above that, I had need to know one of popular databases Oracle, MySQL or Postgresql and a bit of Linux command line, and I was all set.\nI don\u0026rsquo;t count HTML/CSS/Javascript, because it\u0026rsquo;s obvious they are always required.\nThere were other, more niche technologies as well like C/C++, but we rarely could found any related offer on the market, and that stack is more challenging than any other technology mention above. And by the way, C/C++ is not the language for a web developer, which I wanted to become.\nAs you see the choices used to be very limited.\nIf you want to become software developer today you choose from Angular, React, Node, Flutter, React Native, Android, PHP, Laravel, Wordpress, Python, Ruby, Javascript, Java, C#, Django or Flask, plus SQL and NoSQL databases, plus hosting on Amazon Web Services, Google Web Services, Microsoft Azure, etc. These are some of the technologies you can earn money in IT today.\nThere are so many options that it\u0026rsquo;s totally normal if you get confused. If I wouldn\u0026rsquo;t know how to properly categorize all of these technologies and really see their market value, I would be not less confused than you are.\nBut the worst thing is that choosing the right technology is really important. You have to be clear about your career vision and have a plan if you don\u0026rsquo;t want to be treated as a cheap commodity on the market.\nToo many text editors   When I first started to learn to code there weren\u0026rsquo;t many code editors to choose from. There were the free ones Eclipse, JDeveloper, NetBeans, Notepadd++, VIM, and Emacs. Back than VIM didn\u0026rsquo;t have these fancy features that it has today, and Emacs was suitable almost exclusively to C/C++.\nSo as a professional web developer I had to use Eclipse, JDeveloper, NetBeans, or IntelliJ. IntelliJ is a paid app and I was on a budget. JDeveloper used to eat a lot of resources and look bad, the same as NetBeans. The only option left was Eclipse, very limited, and buggy at that time.\nBy the way, in my first job we used Eclipse together with a paid plugin called MyEclipse, to make it a little more robust, I\u0026rsquo;m surprised they still exist to this day myeclipsecn.com.\nToday you have Visual Studio Code, Atom, Emacs, Vim, SublimeText, Eclipse, PyCharm, NetBeans, and more. They are all very powerful code editors, and all of them are free. They have features that used to be available only in paid apps.\nSo what\u0026rsquo;s the problem with having all of these amazing tools? Don\u0026rsquo;t get me wrong, it\u0026rsquo;s great to have this vast of possibilities, but the problem is it\u0026rsquo;s much harder to make a choice and it\u0026rsquo;s easy to start playing around with the editors while you probably should write code. Switching from one editor to another may look like a productive thing to do, while most often it\u0026rsquo;s just time wasted.\nThis is why it\u0026rsquo;s so important to narrow your options down to only one code editor if possible and stick to it. There will be plenty of time to play around with different editors and tools later when you will become a master of one first.\nToo much content   When I started learning to code, I didn\u0026rsquo;t have access to the internet. Very few people I know had the internet at home, and it was very slow, ages far from fiber available today. There were no online courses, no Youtube, no free tutorials, and no Google. There were only books and very expensive stationary offline courses.\nSo learned everything from books, while I was working on my projects. It took me years and it was very hard to do. I succeed because I was fascinated with computers, and as a result, I become very, I mean very nerdy. At a certain point, the programming was the only topic I could talk about. If you want to learn to code you have to buy the books, there was no other way. That\u0026rsquo;s probably why I\u0026rsquo;m still an avid books reader.\nToday you have free access to an unlimited amount of free and paid content, blogs, tutorials, videos on Youtube, online courses, offline courses, mentoring, ebooks, free source code on Github, and more.\nThe problem is that there is just too much of it. Many beginner software developers get stuck because they jump from tutorial to tutorial without much practicing. Most of the blogs are written in the way the reader should follow link after link, for better SEO ranking. The same with Youtube, where we are encouraged to watch one video after another.\nIt\u0026rsquo;s impossible to consume it all, and even trying is a waste of time. What comes one ear comes out the other one.\nComplex, not beginner-friendly tutorials   The thing is, most of the content you will find online is not tagged as \u0026ldquo;beginner level\u0026rdquo;. It\u0026rsquo;s all in the same basket with advanced stuff. So for example, when somebody fresh to programming finds a tutorial for React, he may think that it is a good entry point for web development in React. But what about HTML, CSS, and Javascript? If he doesn\u0026rsquo;t know the fundamentals well, jumping into the React will just cause him confusion, and probably he will quit.\nToo much noise   When we as people get confused we are looking for relief. The simplest way to look for answers in today\u0026rsquo;s world is to ask Google or Youtube. The problem is most of the guys who provide answers to beginners' questions there are not caring at all about you, and just want to sell you something.\nMost often they new only single technology and try to convince the entire world that this is the best choice, together with his course, of course.\nThere is nothing wrong about selling courses, but it\u0026rsquo;s unacceptable to disinform people, make them even more confused then they were just to cash the check.\nThe funny and scary thing at the same time is that if you are looking for confirmation of a statement you may go to Google or any other search engine and ask a question and you will find articles and videos that support it and others that dismiss it. These are conflicting messages that can be easily found.\nSo we really have to ask good questions if we want to get good, reliable answers.\nObsolete information   It\u0026rsquo;s very common for emerging technologies like ExpressJS or React, that the tutorials made a year ago or less are irrelevant today. But, these tutorials are still easy to be found.\nJust imagine, that you decide to learn ExpressJS and you found a promising tutorial about the topic on the first page in Google. You follow the guidance, everything works nice and smooth, but after a couple of hours you figure out that it was tutorial for the previous version and the entire API was changed. So what can you do know with what you learned and the code you have written? Not much. You may start over with another tutorial or quit.\nIt\u0026rsquo;s not your fault, the internet is full of landmines like that on every corner. You have to make sure, the tutorial is fresh before you jump into it.\nA lot of scams   Many blogs and YouTubers are spreading false information, about software developers' earnings or what technologies are worth learning. What is quite funny is that most of these gurus have a less than one year of amateur experience, or they are quitters who fail to learn to code but want to teach others how the industry works.\nThis is why I started Dev Akimbo because I get annoyed by all of this scam around. I want to provide a reliable source of information from someone with 18 years of active programming and industry experience (10 years as a professional developer) to help individuals like you to help you build not only a great career but the life that is worth living.\nCourses that teach nothing practical   Most of the programming courses are just copy and paste information from other courses. After you finish one of these courses, maybe you will know a bit more about the Python or Javascript semantic but other than that you will probably feel stuck.\nThis is why people jump from one course to another because when then finish one they feel the burden of responsibility to do something, and often we don\u0026rsquo;t have a clue what to do next. The ball is on their field, it feels good to pass it to the next instructor.\nJobs have high entry level/requirements   Learning a programing language is not enough. You have to know many other technologies like git, frameworks, libraries, HTML/CSS/JS, at least one database, some design patterns, at least one development methodology, and you have to be an easy-going but professional person to work with. This is quite minimal requirements for a basic web development position. Even if you plan to work as a freelancer.\nIf you want to become a software developer it\u0026rsquo;s a good idea to spend a couple of minutes to browse job offers at least once a week to know which technologies matter and what are the requirements for positions you are interested in. You will probably found that you have to know much more than just one programming language, as well as to provide some proof of your skills.\nConclusion   Even though today we have access to many more options and information than we ever had, it rarely works on our favor when we just starting. Many people get stuck even before they write a single line of code. It\u0026rsquo;s just so easy to jump into Youtube soap opera videos on coding instead of writing code by ourselves.\nThe only solution to this is to cut off the noise, be deliberate on the videos and articles we are watching. They are hundreds on thousands of articles, and new ones are published every day, it\u0026rsquo;s impossible and pointless to consume them all.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/why-its-harder-than-ever-to-learn-programming-today/","tags":["IT Career","Programming"],"title":"Why Its Harder Than Ever to Learn Programming Today"},{"categories":null,"contents":"In this tutorial, we are going to talk about the Chain of Responsibility, one of the most omnipresent design pattern in every web development framework.\nThis design pattern is one of these tools that every web developer should be familiar with. We don\u0026rsquo;t have to know how to code it, but it\u0026rsquo;s important to know how it works.\nIf you are looking for a good introduction to design patterns, check out the article What is a Design Pattern.\nWhat is the Chain of Responsibility design pattern?   It\u0026rsquo;s probably safe to say that unless you want to create your own routing library or request processing framework, you probably won\u0026rsquo;t need to implement this pattern ever. Nevertheless, if you are a web developer, it\u0026rsquo;s essential to know how it works, because it\u0026rsquo;s used in probably every implementation of server-side HTTP request processing frameworks and routing libraries.\nThe Chain of responsibility is a behavioral design pattern where incoming tasks are handled by handlers lined up in the order. Every handler who receives a task may process it, pass it over, or break the chain and stop the task from propagating to the next handler.\nMultiple handlers may handle the incoming task without mutual knowledge. Handlers know nothing about the sender nor the receiver of the generated response.\nCreating Chain of Responsibility in Python?   Let\u0026rsquo;s implement the example Chain of Responsibility for the HTTP request processor.\nFirst, let\u0026rsquo;s create an abstract RequestHandler class that will be extended by every request handler.\nfrom abc import ABC class RequestHandler(ABC): def handle(self, req, res): pass Now let\u0026rsquo;s implement our RequestProcessor, and two types HttpRequest and HttpResponse that will be passed down to handlers.\nclass HttpRequest: def __init__(self, data): self.data = data class HttpResponse: pass class RequestProcessor: def __init__(self): self._handlers = [] def add(self, handler): self._handlers.append(handler) def process(self, data={}): req = HttpRequest(data) res = HttpResponse() for handler in self._handlers: if handler.handle(req, res): break Let\u0026rsquo;s implement some request handlers to handle different types of HTTP requests and Cors handler to enhance request response with CORS.\nclass CorsRequestHandler(RequestHandler): def handle(self, req, res): print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) self.add_cors_headers(res) def add_cors_headers(self, res): print(\u0026#34;Adding CORS response headers\u0026#34;) pass class StaticFileRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;static-file\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) class ApiCallRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;api-call\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) class DynamicHtmlRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;dynamic-html\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) Now, let\u0026rsquo;s write testing code where we will create instance of RequestProcessor, add instance of every handler in the planned order and initiate some HTTP requests:\nrequest_processor = RequestProcessor() request_processor.add(CorsRequestHandler()) request_processor.add(StaticFileRequestHandler()) request_processor.add(ApiCallRequestHandler()) request_processor.add(DynamicHtmlRequestHandler()) for idx, flavor in enumerate([\u0026#34;static-file\u0026#34;, \u0026#34;api-call\u0026#34;, \u0026#34;dynamic-html\u0026#34;]): data = {\u0026#34;number\u0026#34;: idx+1, \u0026#34;flavor\u0026#34;: flavor} print(\u0026#34;Processing request with data \u0026#34; + str(data)) request_processor.process(data) The output of this program is:\nProcessing request with data {\u0026#39;number\u0026#39;: 1, \u0026#39;flavor\u0026#39;: \u0026#39;static-file\u0026#39;} CorsRequestHandler is handling the request Adding CORS response headers StaticFileRequestHandler is handling the request Processing request with data {\u0026#39;number\u0026#39;: 2, \u0026#39;flavor\u0026#39;: \u0026#39;api-call\u0026#39;} CorsRequestHandler is handling the request Adding CORS response headers StaticFileRequestHandler is passing the request ApiCallRequestHandler is handling the request Processing request with data {\u0026#39;number\u0026#39;: 3, \u0026#39;flavor\u0026#39;: \u0026#39;dynamic-html\u0026#39;} CorsRequestHandler is handling the request Adding CORS response headers StaticFileRequestHandler is passing the request ApiCallRequestHandler is passing the request DynamicHtmlRequestHandler is handling the request Processing request with data {\u0026#39;number\u0026#39;: 4, \u0026#39;flavor\u0026#39;: \u0026#39;amazon.com\u0026#39;} CorsRequestHandler is handling the request Adding CORS response headers StaticFileRequestHandler is passing the request ApiCallRequestHandler is passing the request DynamicHtmlRequestHandler is passing the request Error404RequestHandler is handling the request Let\u0026rsquo;s break that down. We put CorsRequestHandler as a first handler on the list because it will never break the chain. The next one is StaticFileRequestHandler because static file requests are the most common. The following request processors ApiCallRequestHandler, DynamicHtmlRequestHandler, are self-explanatory. The Error404RequestHandler handles situations where no other handlers can process the incoming request.\nThe entire source code:\nfrom abc import ABC class HttpRequest: def __init__(self, data): self.data = data class HttpResponse: pass class RequestHandler(ABC): def handle(self, req, res): pass class CorsRequestHandler(RequestHandler): def handle(self, req, res): print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) self.add_cors_headers(res) def add_cors_headers(self, res): print(\u0026#34;Adding CORS response headers\u0026#34;) pass class StaticFileRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;static-file\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) class ApiCallRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;api-call\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) class DynamicHtmlRequestHandler(RequestHandler): def handle(self, req, res): if req.data[\u0026#34;flavor\u0026#34;] == \u0026#34;dynamic-html\u0026#34;: print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True print(self.__class__.__name__ + \u0026#34; is passing the request\u0026#34;) class Error404RequestHandler(RequestHandler): def handle(self, req, res): print(self.__class__.__name__ + \u0026#34; is handling the request\u0026#34;) return True class RequestProcessor: def __init__(self): self._handlers = [] def add(self, handler): self._handlers.append(handler) def process(self, data={}): req = HttpRequest(data) res = HttpResponse() for handler in self._handlers: if handler.handle(req, res): break request_processor = RequestProcessor() request_processor.add(CorsRequestHandler()) request_processor.add(StaticFileRequestHandler()) request_processor.add(ApiCallRequestHandler()) request_processor.add(DynamicHtmlRequestHandler()) request_processor.add(Error404RequestHandler()) for idx, flavor in enumerate([\u0026#34;static-file\u0026#34;, \u0026#34;api-call\u0026#34;, \u0026#34;dynamic-html\u0026#34;, \u0026#34;amazon.com\u0026#34;]): data = {\u0026#34;number\u0026#34;: idx+1, \u0026#34;flavor\u0026#34;: flavor} print(\u0026#34;Processing request with data \u0026#34; + str(data)) request_processor.process(data)  Where to use Chain of Responsibility?   The most popular use of Chain of Responsibility pattern is to line up HTTP request handlers like it\u0026rsquo;s done in frameworks like Django, Flask, or ExpressJS. Another good usage scenario is an error logging system, where different kinds of handlers handle errors of a different type.\nThe Chain of Responsibility can be used in any of the following scenarios:\n when we want to pass incoming requests to one or multiple handlers without specifying response receiver when the configuration of the chain shall be specified dynamically when we want to pass incoming requests to be processed by one or more handlers without specifying with one  Conclusion   The Chain of Responsibility is one of these patterns that we don\u0026rsquo;t code very often, but most of the frameworks are using it undercovers.\nThe main benefit of knowing this pattern is to have a better understanding of popular frameworks, so we can easily learn new technologies and adapt them faster to our workflow.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/chain-of-responsibility-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Chain of Responsibility Design Pattern Python for Web Developers"},{"categories":null,"contents":"In this post, you will learn what Lazy Initialization design pattern is, how to implement it using Python, when it makes sense to use it, and when it will be an overkill.\nLazy Initialization is one of the most popular design patterns, and every professional software developer no matter what languages he uses should be familiar with it, if he is serious about his career.\nIf you are looking for a good introduction to design patterns, check out the article What is a Design Pattern.\nWhat is the Lazy Initialization design pattern?   The Lazy Initialization, also called Lazy Loading is a very simple but powerful a creational design pattern that allows us to delay initialization of the object until it is needed.\nIt is used to increase application performance, speed up the initialization process, and reduces resource consumption: bandwidth, database load, RAM, and CPU usage.\nUsing Lazy Initialization in Python   Let\u0026rsquo;s assume we have implemented an online shop where we have an object Customer that may have a list of orders he created. Without Lazy Loading, we would probably have an entire list of orders retrieved from the database every time we will create object Customer. Even if there were no orders in the customer account, we would query the database.\nEven worse, if we want to get the list of every customer without caring about the orders, all the data would be fetched, and potentially multiple queries to the database would be created.\nTo fix this problem, we can implement model Customer like below:\nclass Customer: def __init__(self): self._orders = None def get_orders(self): if self._orders is None: self._orders = self._load_orders() return self._orders def _load_orders(self): print(\u0026#34;loading orders\u0026#34;) return [] customer = Customer() customer.get_orders() customer.get_orders() customer.get_orders() customer.get_orders() customer.get_orders() The output of this program is:\nloading orders In our Customer class, we retrieve a list of customer orders by calling the get_orders method. Initially, we set the list of orders to None, which means that it wasn\u0026rsquo;t initiated yet. If we used an empty list instead, it would conflict with the scenario when the customer has no orders.\nThe conditional statement inside get_orders method makes sure we will fetch orders only once. Any subsequent calls will result in reusing the data that was already loaded.\nThat structure makes creating instances of Customer cheap because expensive operations are executed only on demand.\nWhere can we use Lazy Initialization?   We can use Lazy Loading on every layer of our application. For example, we may have a long web page with images all around. We can delay the loading of these images until the user scrolls to their position.\nWe should use Lazy Initialization everywhere where both of the conditions are met:\n part of object properties are not mandatory to use the object full initialization of the object involves the execution of expensive operations like database queries, API calls, reading files, generating data, etc.  Using it in other scenarios, doesn\u0026rsquo;t make much sense.\nIt\u0026rsquo;s worth mention that because Lazy Initialization involves caching, loaded data may become stale at some point. It may or may not be an issue for us, but if we want to prevent that from happening, we can implement an additional mechanism to refresh property value on demand.\nConclusion   The Lazy Initialization is one of these widely used design patterns that many developers even not consider as a design pattern, but just good coding practice.\nIt\u0026rsquo;s easy to imagine how clunky and bulky modern applications would be without utilizing this design pattern. Especially in the mobile world with limited bandwidth, energy, and processing power.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/lazy-initialization-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Lazy Initialization Design Pattern Python for Web Developers"},{"categories":null,"contents":"In this post, you will learn what Observer design pattern is, how to implement it using Python, when it makes sense to use it, and when using it will be an overkill.\nIf you are Angular 2 developer or you playing around with libraries like RxJS, you will find this article double helpful, because Angular2 and RxJS are heavily relying on Observer design pattern.\nIf you are new to design patterns read What is Design Pattern first.\nWhat is the Observer design pattern?   The Observer is a behavioral design pattern. The easiest way to think of it is as a publisher-subscribers kind of relationship between objects. Some of the objects may want to get notified when another object state will change and handle it in some way.\nCreating Observer in Python   There are many many ways to implement the Observer design pattern. I propose what used to works best for myself, the implementation that is inspired by the RxJS library.\nfrom abc import ABC class Observer(ABC): def handle_event(self, state): pass class Observable(ABC): def __init__(self, state): self._observers = set() self.state = state def subscribe(self, observer): self._observers.add(observer) def unsubscribe(self, observer): self._observers.discard(observer) def changeState(self, state): if (self.state != state): self.state = state for observer in self._observers: observer.handle_event(state) Our implementation is based on two abstract classes - Observer and Observable. The Observer is a base class for any objects that want to respond to events generated by Observable objects. Observable objects is a base class for purposes that other objects can subscribe to receive notifications about their status changes.\nThat implementation keeps our codebase clean because its easy to make any class observer or observable, without polluting their class definitions.\nLet\u0026rsquo;s create an example of observer and observable classes to see how that implementation works.\nclass Guru(Observable): def __init__(self, name): super().__init__(\u0026#34;I\u0026#39;m sitting\u0026#34;) self.name = name class Follower(Observer): def __init__(self, name, guru): self.name = name guru.subscribe(self) def handle_event(self, state): print(self.name + \u0026#34; say: Hurra! My guru has new state \u0026#39;\u0026#34; + state + \u0026#34;\u0026#39;!\u0026#34;) As you see, both observer and observable implementation are very simple.\nGuru is the class for objects that are meant to have followers, and the Follower is the class for objects which may subscribe to any of the guru objects to receive notifications about their status change.\nThe follower may subscribe to any number of guru objects, or unsubscribe if he like it.\nLet\u0026rsquo;s create instances of these classes and test it:\nGuruBob = Guru(\u0026#34;Crazy Bob\u0026#34;) followerMichelle = Follower(\u0026#34;Michelle\u0026#34;, GuruBob) followerRoger = Follower(\u0026#34;Roger\u0026#34;, GuruBob) GuruBob.changeState(\u0026#34;I\u0026#39;m lying down\u0026#34;) GuruBob.unsubscribe(followerMichelle) GuruBob.changeState(\u0026#34;I\u0026#39;m flying\u0026#34;) The output of this program is:\nRoger say: Hurra! My guru has new state \u0026#39;I\u0026#39;m lying down\u0026#39;! Michelle say: Hurra! My guru has new state \u0026#39;I\u0026#39;m lying down\u0026#39;! Roger say: Hurra! My guru has new state \u0026#39;I\u0026#39;m flying\u0026#39;! So we have a guru object called Crazy Bob, who has two followers: Michelle and Roger. Both of the followers are following Crazy Bob, so when the Crazy Bob changed his state, his followers' event handlers were invoked, printing the messages to the screen.\nSadly, after the last state change, Michelle decided to unsubscribe from receiving state change notifications from guru Crazy Bob, so when the Crazy Bob changed his state to \u0026lsquo;I\u0026rsquo;m flying\u0026rsquo; the Roger was the only one who responded.\nWhat we can also do is add a conditional statement to Observer.handle_event() method body. Because we have access to \u0026ldquo;state\u0026rdquo; we can filter the states that we are only interested in.\nWhere can we use Observer?   The observer pattern is a good choice when we have an object that has a status, and many other objects are interested in receiving notifications about its status change.\nIt doesn\u0026rsquo;t make sense to use this pattern in the situation when there is only a one-to-one relationship between two objects. In that case, there are other more suitable design patterns to model that kind of relationship.\nConclusion   Observer is another very simple but powerful design pattern at our disposal. It let us model complex relationships between objects while keeping the code base simple and clean.\nEven if I don\u0026rsquo;t use this design pattern very often, just by knowing how it works, it makes me craft more mature code. That\u0026rsquo;s why I encourage you to nail this simple design pattern as well.\nObserver is also a cornerstone of the popular reactive programming paradigm, and Angular 2 framework. So if you are working in these domains, an understanding Observer design pattern is a must.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/observer-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Observer Design Pattern Python for Web Developers"},{"categories":null,"contents":"In this post, we will talk about the Abstract Factory design pattern, how to use it, when to use it, and what is of equal importance when not to use it. This is an advanced topic as all design patterns require an in-depth knowledge of programming language semantic, but if you are Python developer already, and you want to top up your professional skills, this video is for you.\nThere is a big chance you will never need to implement an Abstract Factory design pattern. Still, it definitely pays off to know it, not only because it\u0026rsquo;s a shame to be a professional developer who doesn\u0026rsquo;t know it - it is a shame, though - but also it will improve your object-oriented programming sense.\nAnd the beauty of every design pattern is you can use it across the languages.\nIf you are looking for a good introduction to design patterns, check out the article What is a Design Pattern.\nWhat is the Abstract Factory Design Pattern?   Abstract Factory is a creational design pattern used when we want to have a way to create objects of a specific type when the type of created objects can be easily switched without changing the code.\nIt helps promote loosely coupling and easily extendable codebase.\nCreating Abstract Factory in Python   Let\u0026rsquo;s assume we are working on the game, where there will be different species Orc and Goblins.\nBy using the Abstract Factory pattern, we can easily switch from one factory to another, creating creatures of the specific type without messing up the codebase. That\u0026rsquo;s a perfect scenario for Abstract Factory.\nLet\u0026rsquo;s create some enumerate types and basic CreatureType first:\nfrom enum import Enum, auto class CreatureType(Enum): PEASANT = \u0026#34;peasant\u0026#34; SOLDIER = \u0026#34;soldier\u0026#34; KING = \u0026#34;king\u0026#34; class CreatureRace(Enum): ORC = \u0026#34;orc\u0026#34; GOBLIN = \u0026#34;goblin\u0026#34; class Creature: def __init__(self, race, kind): self.race = race self.kind = kind def describe(self): print(\u0026#34;race: \u0026#34; + self.race.value + \u0026#34;, kind: \u0026#34; + self.kind.value) We need implementation of Creature for both Goblin and Orc types, with different roles:\nclass Orc(Creature): def __init__(self, kind): super().__init__(CreatureRace.ORC, kind) class OrcPeasant(Orc): def __init__(self): super().__init__(CreatureType.PEASANT) class OrcSoldier(Orc): def __init__(self): super().__init__(CreatureType.SOLDIER) class OrcKing(Orc): def __init__(self): super().__init__(CreatureType.KING) class Goblin(Creature): def __init__(self, kind): super().__init__(CreatureRace.GOBLIN, kind) class GoblinPeasant(Goblin): def __init__(self): super().__init__(CreatureType.PEASANT) class GoblinSoldier(Goblin): def __init__(self): super().__init__(CreatureType.SOLDIER) class GoblinKing(Goblin): def __init__(self): super().__init__(CreatureType.KING) And finally, we can create our abstract factory class and factories for both of the races:\nclass CreatureFactory: def getPeasant(self): pass def getSoldier(self): pass def getKing(self): pass class OrcFactory(CreatureFactory): def getPeasant(self): return OrcPeasant() def getSoldier(self): return OrcSoldier() def getKing(self): return OrcKing() class GoblinFactory(CreatureFactory): def getPeasant(self): return GoblinPeasant() def getSoldier(self): return GoblinSoldier() def getKing(self): return GoblinKing() As you see, both of our factories extend the abstract CreatureFactory. This construction will give us the flexibility to easily switch factories and produce a different kinds of objects on demand.\nEntire codebase with testing code:\nfrom enum import Enum, auto class CreatureType(Enum): PEASANT = \u0026#34;peasant\u0026#34; SOLDIER = \u0026#34;soldier\u0026#34; KING = \u0026#34;king\u0026#34; class CreatureRace(Enum): ORC = \u0026#34;orc\u0026#34; GOBLIN = \u0026#34;goblin\u0026#34; class Creature: def __init__(self, race, kind): self.race = race self.kind = kind def describe(self): print(\u0026#34;race: \u0026#34; + self.race.value + \u0026#34;, kind: \u0026#34; + self.kind.value) class Orc(Creature): def __init__(self, kind): super().__init__(CreatureRace.ORC, kind) class OrcPeasant(Orc): def __init__(self): super().__init__(CreatureType.PEASANT) class OrcSoldier(Orc): def __init__(self): super().__init__(CreatureType.SOLDIER) class OrcKing(Orc): def __init__(self): super().__init__(CreatureType.KING) class Goblin(Creature): def __init__(self, kind): super().__init__(CreatureRace.GOBLIN, kind) class GoblinPeasant(Goblin): def __init__(self): super().__init__(CreatureType.PEASANT) class GoblinSoldier(Goblin): def __init__(self): super().__init__(CreatureType.SOLDIER) class GoblinKing(Goblin): def __init__(self): super().__init__(CreatureType.KING) class CreatureFactory: def getPeasant(self): pass def getSoldier(self): pass def getKing(self): pass class OrcFactory(CreatureFactory): def getPeasant(self): return OrcPeasant() def getSoldier(self): return OrcSoldier() def getKing(self): return OrcKing() class GoblinFactory(CreatureFactory): def getPeasant(self): return GoblinPeasant() def getSoldier(self): return GoblinSoldier() def getKing(self): return GoblinKing() land = \u0026#34;goblin\u0026#34; creature_factory = None if (land == \u0026#34;orc\u0026#34;): creature_factory = OrcFactory() else: creature_factory = GoblinFactory() peasant = creature_factory.getPeasant() soldier = creature_factory.getSoldier() king = creature_factory.getKing() peasant.describe() soldier.describe() king.describe() The output of this program is:\nrace: goblin, kind: peasant race: goblin, kind: soldier race: goblin, kind: king We use polymorphism to call methods relevant to the CreatureFactory class, while the implementation depends on configuration via the land variable.\nAs you can see, by simply changing the value of the land variable, we can control what types of objects are created in the application.\nWhere can we use Abstract Factory?   We can use the Abstract Factory design pattern everywhere we know we will be creating multiple instances of the same objects, and we need to be able to switch their implementation to different ones without changing the codebase. These kinds of objects should share the same interface.\nThe use of this pattern is recommended if you know that odds are high that more implementation for created objects types may be available later, so we want to make our application future proof. As in our game example, we can easily introduce other races to the game by just adding a new race model and related factory class.\nThat pattern is often used on frameworks configuration level, for example, for creating Statements objects for database connection (JDBC in Java).\nWe shouldn\u0026rsquo;t implement Abstract Factory when we plan to create only a single or a few instances of objects of the specific type, and we will reuse these instances in the application rather than create new ones.\nConclusion   The Abstract Factory is not the most commonly used design pattern that thousands of developers are creating every day. But it\u0026rsquo;s one of the cornerstones of many applications, frameworks that we use.\nKnowing when we shouldn\u0026rsquo;t use it is of equal importance as to know it because errors on the architectural level spoil the implementation layer as well.\nIf you have any questions related to this article, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/abstract-factory-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Abstract Factory Design Pattern Python for Web Developers"},{"categories":null,"contents":"There are many tutorials and articles online about Decorator design pattern, so why I do another one? The main reason is that many people who make these tutorials don\u0026rsquo;t have much programming experience. So they provide inaccurate or misleading information.\nIn this tutorial, you will not only learn how Decorator pattern works in Python but also where to use it and how to use it. We will also do some coding.\nIf you are new to design patterns read What is Design Pattern first.\nWhat is the Decorator?   In a nutshell, Python decorator is a function that wraps another function and controls its execution. We do that to enhance the functionality of the wrapped function, without changing implementation of that function.\nDecorator is a structural design pattern, because it simplify the design of relationships between entities.\nCreating Decorator in Python   Let\u0026rsquo;s first create a function that we want to decorate.\ndef house(): print(\u0026#34;house\u0026#34;) And the decorator function itself:\ndef with_garden(f): def with_garden_nested(): f() print(\u0026#34;with garden\u0026#34;) return with_garden_nested The with_garden function takes a function as a parameter. The with_garden_nested is a nested function inside of with_garden. We then use the Python feature called \u0026ldquo;closure\u0026rdquo; to refer to the outer function parameter f and call it. The concept is that when we use this decorator on the home function, it will replace the original function with with_garden_nested function.\nSo let\u0026rsquo;s do that:\nhouse = with_garden(house) That\u0026rsquo;s how we decorate function with decorator.\nWhen we call house function, you will see that the house was called first, and then our \u0026ldquo;with garden\u0026rdquo; feature will be added. That\u0026rsquo;s precisely what we have in with_garden_nested function.\nWe can also do the same using special Python decorator syntax, which looks like this:\n@with_garden def house(): print(\u0026#39;house\u0026#39;) Doing it this way is just syntactic sugar because both methods work the same. But using the syntax above is the preferred method because it\u0026rsquo;s much easier too read.\nEvery decorator function is also a Higher Order Function. Higher-Order Function is the function that acts on or return other functions. And that is exactly what our with_garden function does.\nLet\u0026rsquo;s run this program. Here is the entire code for this example:\ndef house(): print(\u0026#34;house\u0026#34;) def with_garden(f): def with_garden_nested(): f() print(\u0026#34;with garden\u0026#34;) return with_garden_nested @with_garden def house(): print(\u0026#39;house\u0026#39;) house() The output is:\nhouse with garden As you see, it prints \u0026ldquo;house\u0026rdquo; first and the \u0026ldquo;with garden\u0026rdquo; afterward.\nApplying multiple decorators to a single function   We can apply as many decorators as we want to a single function, or even apply the same decorator multiple times.\nLet create two more decorators.\ndef with_patio(f): def with_patio_nested(): f() print(\u0026#34;with patio\u0026#34;) return with_patio_nested def with_garage(f): def with_garage_nested(): f() print(\u0026#34;with garage\u0026#34;) return with_garage_nested And let\u0026rsquo;s apply them on our house function, using decorator notation:\n@with_garden @with_patio @with_garage @with_garage def house(): print(\u0026#34;house\u0026#34;) or the same using functional programming:\nhouse = with_garage(with_garage(with_patio(with_garden(house)))) As you can see, the decorator syntax notation is much easier to read than functional programming notation.\nHere is the entire code for this example:\ndef with_garden(f): def with_garden_nested(): f() print(\u0026#34;with garden\u0026#34;) return with_garden_nested def with_patio(f): def with_patio_nested(): f() print(\u0026#34;with patio\u0026#34;) return with_patio_nested def with_garage(f): def with_garage_nested(): f() print(\u0026#34;with garage\u0026#34;) return with_garage_nested @with_garden @with_patio @with_garage def house(): print(\u0026#34;house\u0026#34;) house() The output is:\nhouse with garage with garage with patio with garden As expected, the house is executed first and then every decorator in reverse order.\nParametrizing decorators   Parametrization is a very powerful feature of the decorators.\nLet\u0026rsquo;s assume that the garden can take size as a parameter, and the default size if not provided is regular. To do it we have to modify with_garden decorator function:\ndef with_garden(size=\u0026#34;regular\u0026#34;): def with_garden_nested_1(f): def with_garden_nested_2(): f() print(\u0026#34;with \u0026#34; + size + \u0026#34; garden\u0026#34;) return with_garden_nested_2 return with_garden_nested_1 To make it work, we had to add another nested function that wraps our previous decorator function.\nLet\u0026rsquo;s apply it to our house function, together with other decorators using decorator notation:\n@with_garden(\u0026#34;big\u0026#34;) @with_patio @with_garage def house(): print(\u0026#34;house\u0026#34;) or the same with functional programming:\nhouse = with_garage(with_patio(with_garden(\u0026#34;big\u0026#34;)(house))) Here is the entire code for this example:\ndef with_garden(size=\u0026#34;regular\u0026#34;): def with_garden_nested_1(f): def with_garden_nested_2(): f() print(\u0026#34;with \u0026#34; + size + \u0026#34; garden\u0026#34;) return with_garden_nested_2 return with_garden_nested_1 def with_patio(f): def with_patio_nested(): f() print(\u0026#34;with patio\u0026#34;) return with_patio_nested def with_garage(f): def with_garage_nested(): f() print(\u0026#34;with garage\u0026#34;) return with_garage_nested @with_garden(\u0026#34;big\u0026#34;) @with_patio @with_garage def house(): print(\u0026#34;house\u0026#34;) house() The output of this program is:\nhouse with garage with patio with big garden The output is printed as expected, starting house, garage, patio, and finishing with a big garden.\nWhere can we use decorators?   Now, you know how to create decorators in Python. Let\u0026rsquo;s describe a couple of common scenarios when they can be used. We will use only decorator syntax in the following scenarios.\nDisable function   We can implement decorator that disables wrapped function.\nThe implementation may look like this:\ndef disable_function(f): def disable_function_nested(): print(\u0026#34;function \u0026#34; + f.name + \u0026#34; is disabled!\u0026#34;) return disable_function_nested @disable_function def func(): print(\u0026#34;hello func\u0026#34;) func() The output of this program is:\nfunction func is disabled! What this decorator does is simply prevent the original function from executing, and showing the message instead.\nLogger   One of the common scenarios is to log the invocation of certain function calls.\nThe example implementation can look like this:\ndef logger(f): def logger_nested(): print(\u0026#34;calling \u0026#34; + f.name) return_val = f() print(f.name + \u0026#34; was called\u0026#34;) return return_val return logger_nested @logger def func(): print(\u0026#34;func\u0026#34;) func() The output of this program is:\ncalling func func func was called  Access security layer   This example is much more complex. We will use a decorator function to provide additional security access layer to our wrapped function.\nFirst, let\u0026rsquo;s create the User class and UserRole enumeration.\nfrom enum import IntEnum class UserRole(IntEnum): READER = 1 WRITER = 2 class User: def __init__(self, name, role=UserRole.READER): self.name = name self.role = role Now, let\u0026rsquo;s create our security check decorator function.\ndef secured(role): def secured_nested_1(f): def secured_nested_2(self, user): if (role \u0026gt; user.role): print(user.name + \u0026#34; \u0026#34; + f.name + \u0026#34; access denied\u0026#34;) else: f(self, user) return secured_nested_2 return secured_nested_1 Now, let\u0026rsquo;s create a Blog class, which two functions with different access roles.\nclass Blog: @secured(UserRole.READER) def read_post(self, user): print(user.name + \u0026#34; read post\u0026#34;) @secured(UserRole.WRITER) def write_post(self, user): print(user.name + \u0026#34; insert post\u0026#34;) We want to secure two functions with different levels of security - reading blog posts available for readers and writing blog post available only for writers.\nAnd finally, let\u0026rsquo;s create both the Blog and the User instances and invoke blog methods.\nblog = Blog() kevin = User(\u0026#34;Kevin\u0026#34;) blog.read_post(kevin) blog.write_post(kevin) Here is the entire code for this example:\nfrom enum import IntEnum class UserRole(IntEnum): READER = 1 WRITER = 2 class User: def __init__(self, name, role=UserRole.READER): self.name = name self.role = role def secured(role): def secured_nested_1(f): def secured_nested_2(self, user): if (role \u0026gt; user.role): print(user.name + \u0026#34; \u0026#34; + f.__name__ + \u0026#34; access denied\u0026#34;) else: f(self, user) return secured_nested_2 return secured_nested_1 class Blog: @secured(UserRole.READER) def read_post(self, user): print(user.name + \u0026#34; read post\u0026#34;) @secured(UserRole.WRITER) def write_post(self, user): print(user.name + \u0026#34; insert post\u0026#34;) blog = Blog() kevin = User(\u0026#34;Kevin\u0026#34;) blog.read_post(kevin) blog.write_post(kevin) When we run this program it will produce the following output:\nKevin write_blog_post access denied Kevin read post As we expected, it says Kevin, as a reader, is allowed to read the blog post but is not allowed to write one.\nOther scenarios   The Decorator design pattern is often used in popular frameworks like Django and Flask. You will use decorators a lot while working with these frameworks and modern Python.\nConclusion   The Decorator is a very practical, widely used design pattern. As professional Python developers, we probably not create new decorators every day, but we use them very often.\nBecause of that, it\u0026rsquo;s essential to understand the pattern behind these functions and be able to build a decorator function when it is needed.\nIf you have any questions related to this article, leave the comment below.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/decorator-design-pattern-python-for-web-developers/","tags":["Design Pattern","Python","Python3"],"title":"Decorator Design Pattern Python for Web Developers"},{"categories":null,"contents":"Design patterns are the concept that is often overlooked by the beginner software developers, but what more alarming, by senior developers as well.\nIn this article, I\u0026rsquo;m going to demystify what design patterns are and what are the benefits of using them.\nSo if you are new to design patterns, you can use this post as an introduction.\nWhat are design patterns?   Design patterns are keywords used by experienced developers to communicate the solutions to the problems.\nThey are like templates, ways of structuring the code in a way that is proven to solve a particular group of problems successfully.\nThey are like small and big elements that every application uses behind the scene.\nBenefits of design patterns   Here are the most significant benefits of using design patterns.\nDesign patterns as communication language of PROs   Experienced developers know design patterns…\nAt least some of them…\nAt least they should.\nWhen you speak with your colegues, you can make an analogy to specific design patterns to better describe your point. That way, it\u0026rsquo;s far easier for your colleagues to imagine the solution you have on your mind.\nDesign patterns as solutions to common problems   Design patterns are abstractions that describe a common solution to a particular group of problems.\nFor example, instead of thinking how to solve that specific challenge, you can start by thinking about design patterns that are often used to solve these kinds of problems.\nThe more design patterns you know, and the better you understand them, the bigger chances are you will get inspired by one of them and find the optimal solution.\nDesign patterns as time savers   While using a design pattern as a problem solver, you save time because pattern implementations are well known.\nTo find example implementation, you can simply ask Google by typing the pattern name and programming language, for example, \u0026ldquo;singleton python\u0026rdquo;. That will give you example implementations of Singleton pattern written in Python.\nDesign patterns reduce the risk of making errors   Your code is also less likely to have bugs because you don\u0026rsquo;t design the solution from scratch. Instead, you choose a solution that is proven and tested. But, it\u0026rsquo;s always a good idea to test the implementation, with automated tests.\nType of design patterns   There are many types of design patterns suitable for different problem categories.\nCreational patterns   These patterns are used to deal with object creation tasks.\nThe common example is to use the Singleton pattern to make sure there is no more than one instance of the object in the application.\nThe most common creational patterns are Factory Method, Abstract Factory, Singleton, Builder, Prototype, Lazy Initialization.\nStructural patterns   Structural patterns describe how to combine objects and classes to assemble new structures.\nFor example, you can use the Adapter pattern to adapt class representing file to be used as a data source for database processing library.\nThe most common structural patterns are: Adapter, Decorator, Facade, Composite, Proxy, Delegation.\nBehavioral patterns   These kinds of patterns describe ways to implement interactions between different objects.\nFor example, you can implement multiple algorithms for list sorting using the Strategy pattern - one strategy per algorithm.\nThe most common behavioral patterns are: Chain of Responsibility, Command, Iterator, Observer, State, Strategy, Visitor.\nArchitectural patterns   These kinds of patterns are used for solving problems on the architecture level.\nFor example, the common Model-View-Controller (shortly MVC) pattern is very often used to create applications where Model objects and Views are separated, and don\u0026rsquo;t know about each other. The Controller is the component that uses Models and Views, while running application logic.\nThe most common architectural patterns are: MVC, Client-Server, DAO, DTO, DDD, Interceptor, Inversion of Control.\nFunctional patterns   These design patterns are used in functional programming.\nThe most common functional patterns are: Closure, Generator, Currying, Function Composition.\nConcurrency patterns   These design patterns are used to solve problems related to concurrent access to the application.\nFor example, you can use the Thread-Local Storage pattern to create separate data storage for every started thread.\nThe most common concurrency patterns are: Immutable Object, Thread-Local Storage, Read-Write Lock.\nShould I learn design patterns?   Well, if you want to be perceived as an expert programmer, then YES, 100%!\nYou should know at least some of the most common design patterns.\nThere are not many things more disappointing in the coding world than the expert developer that doesn\u0026rsquo;t have a clue how common design pattern works.\nSo if you are new to the design pattern world, please do yourself a favor and learn at least the most common ones like Singleton, Decorator, Prototype, Factory Method, Abstract Factory, MVP, Lazy Initialization, Strategy, Builder, and Observer.\nYes, this list has more than one item, but those patterns are the ones every no beginner software developer should know.\nLearning design patterns will bring you to the world of new ways of creative problem-solving. If you would grasp how these patterns work, you will become a much better developer.\nConclusion   You can\u0026rsquo;t know too many design patterns, but you can know too few.\nDesign patterns are bread and butter for every professional developer. Most of the programming problems are solved by using one or multiple of them.\nAt some point in our professional career, we think in design patterns first and write custom code as a fallback.\nIf you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/what-is-a-design-pattern/","tags":["Design Pattern"],"title":"What Is a Design Pattern"},{"categories":null,"contents":"In this post, I\u0026rsquo;m gonna give you the list of Python 3 reserved keywords. This list is handy when you will be creating variables, function names, and classes.\nIt would also help while crafting documentation and code for fellow developers to avoid making references to the concepts that are not related and could cause confusion.\nKnowing these keywords will not only make you a better Python programmer but will also make you look more mature as a programmer.\nNewbie coders often forgot that the particular word is a reserved keyword, and create confusing names for functions and variables. They don\u0026rsquo;t know or remember all the abstractions enclosed in the programming language. And it\u0026rsquo;s common for inexperienced developers. You don\u0026rsquo;t want to be perceived as one of them, do you?\nThe list is not hard to remember, but it doesn\u0026rsquo;t make sense to learn it. Instead, read it once or twice, and go back to it every time you need to refresh your memory while working with the code.\nOver time you will notice that you will know every element on the list without learning it.\nThe list is grouped by the context where a particular keyword can occur.\nBoolean related    True False  Special values    None  Module asyncio related    async await  Modules related    import - used to import the content of the module into the current module as - used together with \u0026lsquo;import\u0026rsquo; specifies an alias for imported module from - used together with \u0026lsquo;import\u0026rsquo;, it specifies the module to import, and \u0026lsquo;import\u0026rsquo; specifies what functions will be imported  Functions related    def - define function pass - skip the function definition return - return value from the function lambda - used for creating anonymous, inline functions, without self parameter global - used for declaring a variable inside a function as global (as it was declared outside the function) nonlocal - marks the variable that it refers to the variable defined outside the function, used only when we change the value in nested function (closures)  Conditional statements related    if - starts a conditional block else - alternative block in a conditional block elif - alternative conditional block with condition check is - returns true if two objects are the same  Logical operators    and - expression result into True only if both operands are True or - expression result into True only if any of operands is True not - expression result into True only if the operand is False in - used to test if a sequence (string, list, tuple) contains a value  Loops related    for - starts for loop block while - starts while loop block break - exit execution of the loop continue - skips current loop iteration and go to the next one  Control flow    with - declares a control-flow structure as - used together with \u0026lsquo;with\u0026rsquo;  Exceptions related    try - starts try/except block raise - throws an exception except - starts specific exception handling block finally - starts block executed after the try/except block execution is finished  Class related    class - used to declare a class pass - used to declare that child class will have the same declaration as it\u0026rsquo;s parent class del - deletes the class  Variables related    del - deletes the variable or removes value from the sequence (list, tuple, string)  Generators related    yield - pauses generator execution and returns the value  Assertion related    assert - declares assertion condition  Conclusion   The list of Python keywords is a good asset to have on hand. Even experienced programmers forget some of these keywords.\nTo our advantage, Python doesn\u0026rsquo;t have many built-in keywords, and they are very easy to remember when you craft a lot of code on a daily basis.\nIf you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/python-3-build-in-and-reserved-keywords/","tags":["Python","Python3"],"title":"Python 3 Build in and Reserved Keywords"},{"categories":null,"contents":"If you are a web developer, many people will expect that you know how the web works. If you didn\u0026rsquo;t figure out that yet, this article is a good opportunity to know everything you should know without going too deep into not important details.\nClient - server model   Simply put, the Internet works in a client-server manner.\nThe client is our web browser like Chrome or Safari, and the server is an HTTP server. HTTP is the protocol used for communication between them.\nThe Internet is built with a global, vast network of data centers connected together via optical fiber wires.\nData centers host HTTP servers, databases, and other things.\n   fig 1. Network of data centers  Client request a website   When we want to visit any particular website, we type the domain name, and the browser, in a magical way, takes us to the requested web page.\nNot really magical, but what happens undercovers the browser don\u0026rsquo;t know what does amazon.com means, so he has to ask nearest DNS server, domain name resolution server - and there are networks of them as well - for IP address of the amazon.com. Because the browser needs an IP address, he is not happy with just having a domain name.\nOn the Internet, everything is identified by a unique IP address, even our computers, and mobile phones.\nThe browser resolves a domain name to IP address and caches it into the local DNS table, so next time we will want to see amazon.com, the browser will look up to the local table instead of asking remote DNS servers, which will be much faster.\nHTTP and HTTPS   The domain address can also contain protocol prefix HTTP or HTTPS. When it does, the entire address become URL, which means a uniform resource locator.\nWhen the URL starts with HTTP, we request to download the website using a standard, unencrypted connection. HTTPS means that we request an encrypted connection, and when it\u0026rsquo;s successful, we will see on the screen padlock icon like the one below.\nServer response   If everything is ok, the server replies which HTML5 format document. This HTML5 format may contain references to other resources like fonts, stylesheet files, script files, which will be downloaded next.\nTo get these extra resources, our internet browser may make many requests to receive all of them.\n   fig 2. HTTP request and response  Tracking server requests   If we are curious about what is actually downloaded when you go to the amazon.com website, you can open the browser inspector tool - every popular browser have one - go to the Network tab, and reload the page. You will see all the requests that were made to load this web page.\n   fig 3. Tracking server requests  Conclusion   So this is how the Internet works in a nutshell. I gave you an overview of the process and the most important actors involved.\nIf you want to dwell deeper into details, how particular problems are solved, and how this entire network is possible at all, feel free to do it. But this article contains the essence that every web developer should know about the Internet. Everything else is a bonus.\nIf you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nStay curious!\n","permalink":"https://devakimbo.com/blog/how-the-internet-works/","tags":["Beginner","Web Development"],"title":"How the Internet Works"},{"categories":null,"contents":"HTML5 is probably the most basic concept for every web developer. But because some people keep asking what does it mean, I decided to write a post to answer this question.\nWhat is HTML?   HTML is a shortcut from Hypertext Markup Language, but it doesn\u0026rsquo;t mean anything. What matters is that it\u0026rsquo;s a language used to define a structure of the web page.\nHTML is something that we, as humans can understand and use it to make web pages. Internet browsers understand this notation as well. So thanks to HTML, humans and the machines may speak the same language.\nHTML is used only for defining the structure of the web page, meta information and additional assets like inline scripts or stylesheets, or references to external ones.\nWe don\u0026rsquo;t use HTML to define what color or layout the web page will have. For this purpose, we use CSS, which stands for Cascading Style Sheets.\nHTML web page is just a simple text document written in HTML syntax.\nWhat is HTML5?   The HTML5 is a modern version of HTML, and it\u0026rsquo;s known as an HTML Living Standard, which means it\u0026rsquo;s keeps updated with new elements and features.\nWhy we need HTML5?   Well, before HTML5 was released, HTML didn\u0026rsquo;t have any standardized way to support embedded media formats like audio and video, which made many different vendors create their addons.\nAs a result, if a user wanted to watch a video in an internet browser, he had to install a plugin for a particular media player. It causes a lot of headaches and security holes.\nThe main internet browsers vendors, together with Google and World Wide Web Consortium - the institution responsible for maintaining the previous standard - decided to work together on the new standard, better suited for modern web needs.\nHTML5 solved the problem of the media content and brought the collection of semantic tags that better describe the context they are used in, like an article, section, header, and footer.\nThe HTML5 specification is updated regularly, and internet browser vendors keep their browsers update as well. So we can use new features while building websites.\nCan we skip the number \u0026ldquo;5\u0026rdquo; and just say \u0026ldquo;HTML\u0026rdquo;?   Technically we can, because HTML5 becomes the global standard for the web, and old HTML shouldn\u0026rsquo;t be used anymore, but because of legacy reasons, we need to pronounce the number as well, to avoid confusion.\nYou may ask what \u0026ldquo;legacy reasons\u0026rdquo; we are all using HTML5 now, right?\nNot really, there are some creepy places where old HTML is still the status quo. I mean very, very creepy places, like old government institutions, which didn\u0026rsquo;t decide to update their internal websites or even external ones. Their employees still use old Internet Explorer 8 or earlier, on Windows XP\u0026hellip; or earlier.\nSimply nobody wants to take the responsibility of touching these old things. They are a hive of hornets, and it\u0026rsquo;s better to leave them as they are.\nThe best thing we can do about it is to avoid these places and pronounce HTML5 instead of HTML, to keep the beast inside its cave.\nConclusion   So here it is, a simple explanation of HTML and HTML5. But if HTML still sounds blurry to you or if you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/what-html5-means/","tags":["Beginner","Web Development"],"title":"What HTML5 Means"},{"categories":null,"contents":"Many seasoned developers type long git commands every time they need to perform a simple task, they forget the attributes or entire commands. It\u0026rsquo;s a shame to see senior developer typing 40 characters without a second thought.\nIn this post, I\u0026rsquo;m going to show you killer git feature that sadly many developers overlook. That\u0026rsquo;s git aliases. If you know it already, bear with me because I will share with you my secret 47 aliases that I can\u0026rsquo;t imagine programming without.\nIf you use git a lot via command line and you probably already know what git aliases are.\nIf you use any GUI tool instead of the terminal to run git commands, well, it\u0026rsquo;s possible that after you get familiar with git aliases, you will switch your git workflow entirely to the terminal.\nGit aliases are a simple but very effective way to increase our productivity while using git.\nIf you are new to git aliases, let me give you a brief introduction.\nFor example, if you want to display the repository log as a nice colored tree, you will type something like this.\ngit log --graph --date=relative --pretty=tformat:\u0026#39;%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset\u0026#39; If you have an alias, you can just type git ls to get the same effect.\nThis also relates to other commands. You can literally shortcut any custom git command you want.\nWhat I really like about git aliases is that you can use alias inside alias like for example here:\nassumed = \u0026quot;!git ls-files -v | grep ^h | cut -c 3-\u0026quot; unassumeall = \u0026quot;!git assumed | xargs git update-index --no-assume-unchanged\u0026quot; You can find the entire list of 47 the most handy git aliases with the descriptions below:\n[alias] # list all aliases la = \u0026quot;!git config -l | grep alias | cut -c 7-\u0026quot; # log as graph tree ls = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u0026amp;lt;%an\u0026gt;%Creset' --abbrev-commit --all --branches # formated log with stats ll = log --pretty=format:'* %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u0026amp;lt;%an\u0026gt;%Creset' --decorate --numstat --all --branches # log as series of patches fl = log -p # grep over the log and return commit and files fi = log --all --pretty=\\\u0026quot;format:%Cgreen%H %Cblue%s%Creset\\\u0026quot; --name-status --grep # formated, colored reflog rl = reflog --pretty=format:\\\u0026quot;%Cred%h%Creset %C(auto)%gd%Creset %C(auto)%gs%C(reset) %C(green)(%cr)%C(reset) %C(bold blue)\u0026amp;lt;%an\u0026gt;%Creset\\\u0026quot; --abbrev-commit # add all files to index and stage a = add --all # add all file to index and stage with patch mode ap = add --all -p # show diff of the given revision dr = \u0026quot;!f() { git diff \u0026quot;$1\u0026quot;^..\u0026quot;$1\u0026quot;; }; f \u0026quot; # find file path in code base f = \u0026quot;!git ls-files | grep -i \u0026quot; # search code base for string gr = grep -Ii # amend last commit cia = commit --amend --reuse-message=HEAD --edit -v -q # commit ci = commit -v -q # assume unchanded for single file assume = update-index --assume-unchanged # unassume unchanded for single file unassume = update-index --no-assume-unchanged # list all assume unchanged files assumed = \u0026quot;!git ls-files -v | grep ^h | cut -c 3-\u0026quot; # unassume all assume unchanged files unassumeall = \u0026quot;!git assumed | xargs git update-index --no-assume-unchanged\u0026quot; # show last tag lt = describe --tags --abbrev=0 re = remote rev = remote -v rp = replace --format=long pl = pull ps = push pst = push --tags cp = cherry-pick st = status -s fe = fetch fea = fetch -a ci = commit co = checkout br = branch brr = branch -r di = diff diff = diff dc = diff --cached HEAD^ r = reset r1 = reset HEAD^ r2 = reset HEAD^^ ss = stash # list all stashes in nice colo format sl = stash list --pretty=format:\\\u0026quot;%C(red)%h%C(reset) - %C(dim yellow)(%C(bold magenta)%gd%C(dim yellow))%C(reset) %\u0026amp;lt;(70,trunc)%s %C(green)(%cr) %C(bold blue)\u0026amp;lt;%an\u0026gt;%C(reset)\\\u0026quot; sd = stash show -p mt = mergetool dt = difftool sub = submodule # update all modules to most recent versions subu = submodule update --recursive --remote --merge # find parent branch for current branch parent = \u0026quot;!git show-branch | grep '*' | grep -v \\\u0026quot;$(git rev-parse --abbrev-ref HEAD)\\\u0026quot; | head -n1 | sed 's/.*\\\\[\\\\(.*\\\\)\\\\].*/\\\\1/' | sed 's/[\\\\^~].*//' #\u0026quot; # show details of last commit sh = show You can copy and paste them to your .gitconfig, but what I recommend instead is go through this list and copy and paste only the ones that you found useful, or you think that they will be handy.\nTry to use some of them afterward, but careful because some of them are destructive. You can also change the shortcuts for something more convenient if you prefer it.\nConclusion   So here it is, the list of 47 git aliases that I found every web developer must-have to use git in a productive way.\nI hope they will increase your productivity while working in the console, and if you were using any GUI tool maybe, these shortcuts would replace it as well.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nIf you know any other aliases that you often use, let me know in the comment below.\nStay focused!\n","permalink":"https://devakimbo.com/blog/47-git-aliases-that-will-make-you-more-productive/","tags":["Git","Hacks","Web Development"],"title":"47 Git Aliases That Will Make You More Productive"},{"categories":null,"contents":"If you are a web developer or any kind of IT professional, buying a new laptop is probably a serious event for you.\nMany people tell that the MacBook is the best choice, others say that for software development, only Linux. Others are loyal to Windows. And often, our options are limited by the amount of money in our pocket.\nIn this post, I will tell you how many laptops with Windows really cost for a web developer. What is the official practice, and what are the hidden.\nIn this post, I don\u0026rsquo;t want to contribute to holy war, which operating system and which laptop is better for software development - web development in particular. Instead, I will share with you my honest opinion build during 15 years of my career as a web developer.\nHow much laptop with Windows really cost?   Let\u0026rsquo;s assume that you, as a web developer, decided to buy a new laptop with Windows.\nLet\u0026rsquo;s also assume it\u0026rsquo;s a 2020 HP 15.6\u0026quot; Touchscreen Laptop Computer/ 10th Gen Intel Quard-Core i7 1065G7 up to 3.9GHz/ 16GB DDR4 RAM/ 1TB PCIe SSD/ 802.11ac WiFi/ Silver/ Windows 10+ EST 500GB External Hard Drive Bundle gosh.\nI don\u0026rsquo;t remember when last time I saw these kinds of crazy titles.\nIt\u0026rsquo;s a laptop from the upper price range, and it cost $1109. Yes, we don\u0026rsquo;t want the cheapest stuff for our work.\nI choose this model because it has a big screen, i7 CPU, 16GB RAM, and 1TB SSD, so it looks like a good alternative to MacBook Pro with similar spec, which costs $2399.\nAs a disclaimer, I don\u0026rsquo;t have any experience with this particular laptop model. But I do have years of experience with laptops from the upper-middle and top price ranges, so I know what the promise sounds like and what the reality is.\nNow, we roughly know what we get, let\u0026rsquo;s have a look at what we really paid for.\nCrappy keyboard   As a web developer, you will use a keyboard a lot. If you found your new laptop has hard to press buttons and after a couple of minutes of typing your fingers, demands attention, then sorry you were out of luck this time.\nA terrible keyboard is typical for any price range of the laptops. If there is a laptop with a really good keyboard that I can use all day long without complaining, other than MacBook, please show me the one.\nWhat I found interesting is that some premium price range models have even worse keyboards than the one in the lower price tiers.\nWhy? Because the producer tried to innovate and release the keyboard that was good enough with some new concept, without testing it first with the real users. Thanks to these experiments, we have relatively cool looking but not practical keyboards like the flat one displayed by laser, or hard to press shallow keys. Both of them these innovations just make things worse for us users.\nWhen I look in the past, what I found interesting was that I never thoughts that the keyboard in the laptop could be pleasant to use until I got a MacBook. Before that, I was ready to compromise on everything.\nI justify that I should be grateful because this is a \u0026ldquo;mobile computer\u0026rdquo; and I can take and do the work from any place. I shouldn\u0026rsquo;t demand to have a good keyboard because it\u0026rsquo;s not essential, and it\u0026rsquo;s actually shaming that I demand to have a good one on the laptop\u0026hellip; And many other thoughts like that.\nThe truth is, most of us who use anything but MacBook, switch to the stationary keyboard on the first possible occasion.\nTimes goes by, and none of the major laptop producers fix that issue.\nYou will probably buy an external keyboard as many people do and switch to it as soon as you come back home or even carry one with a laptop. It will cost you about $30 for just not a bad keyboard.\nCrappy touchpad   My attitude towards building touchpad in laptops was the same as towards the keyboard:\n\u0026ldquo;It\u0026rsquo;s something extra. It\u0026rsquo;s not meant to be heavily used for the entire day, for serious work. It\u0026rsquo;s here just to make a small cosmetic change, and that\u0026rsquo;s it. And there is no touchpad that can compete with an external mouse, and I should switch to the one as soon as I can.\u0026rdquo;\nAnd other thoughts like that.\nAll of these arguments sound legit and convincing, but are they actually true?\nI remember when I first time went to the Apple store out of desperation. I was so desperate that I was ready to swallow the shame that I\u0026rsquo;m going to this hyped store with overpriced products made by \u0026ldquo;that company who overprices everything without any rational reason, for the people who just want to show up\u0026rdquo;.\nIt was just 2-3 months after I bought a new laptop for about $1600, and I was already mad because of broken promises and desperate for change. Yes, I was ready to pay more, just to avoid the frustration of having this feeling that somebody promises me something and then run out with my money, without caring any more.\nSo I went to the Apple store and started playing around with MacBook air. It instantly grabbed my attention. It looks so slim, so perfect, I had to give him a try, and I swiped its touchpad, expecting nothing more than from the laptop. I instantly realized this touchpad really works, as I always wanted.\nThe touchpad wasn\u0026rsquo;t a poor substitute for the mouse; it was the successor of the mouse. It wasn\u0026rsquo;t not only working smoothly, have a perfect size, but also recognize when I put one, two, or three finders on it and acted accordingly. I couldn\u0026rsquo;t stop playing around with it for a couple of minutes. I was hooked.\nFrom this moment on, I started to build my very own opinion about MacBooks and other products made by Apple without being biased by the opinions of random people from the internet, who even didn\u0026rsquo;t dare to come into the store and try it.\nAs a regular laptop user, I\u0026rsquo;m 99% sure that you will want to connect an external mouse as most of the users do. It will cost you above $30 to get a relatively good mouse.\nCheap, crackling plastic cover   This doesn\u0026rsquo;t apply to some to the laptops from the very top price range. Few of them do have aluminum covers that look pretty good and don\u0026rsquo;t make any crackling sounds while using.\nBut most of the laptops are made with cheap plastic and every click to the touchpad, keyboard, or even a cover, punish us with this creepy, crackling plastic sound if there would be to much space between one element and the other.\nYears ago, when I had one of these laptops, I kept rationalizing to myself, \u0026ldquo;yes, this plastic sounds bad, but this is good quality plastic, and it makes my laptop lightweight. Thanks to it, my laptop weighs only 2.5kg, so I should be grateful they didn\u0026rsquo;t use heavy aluminum or worse materials.\u0026rdquo; I was also grateful for the fact I could afford it, but when I\u0026rsquo;m looking from the time perspective it was a laptop from the higher end, I should get far more return for my investment.\nThe time had to pass before I realized what was true in my argumentation and what wasn\u0026rsquo;t. The laptop was made of cheap plastic, and it still weighs more than 2.5kg, and that\u0026rsquo;s a lot.\nThe plastic wasn\u0026rsquo;t good quality, and nothing justifies the crackling sounds it produced when I was simply, gently used it. The reason was that the cover was well fitted.\nCan you imagine working on something that will give you that experience every day all day long? How much would it be worth for you to solve it?\nSadly there is no simple way to solve this issue other than buying MacBook. MacBooks covers are made of high-quality aluminum. All the pieces are perfectly fitted, and it doesn\u0026rsquo;t make any annoying sound.\nEven though they are made with metal, they weight only a fraction of what regular laptops. There is no other way to upgrade a regular laptop other than to buy the MacBook.\nCheap, unreliable hardware   During my career as a professional web developer, I had three premium laptops, and all of them had the same problems with hardware.\nThe external speaker was working, but at some point, the volume control stopped working. I had to buy external speakers or headphones or both. That adds another $100 or more to the bill.\nTouchpad sometimes works sometimes doesn\u0026rsquo;t'. It also scrolls in a weird, indeterministic way.\nThe display screen is kind of ok, but when you want to show something to someone, you realized that the only person who sees anything is the on sitting on the very front to the screen. Other people just see the shadows.\nThe display often has something called \u0026ldquo;dead pixels\u0026rdquo;, these are single pixels that are broken, but still are displayed on the brand new screens. There is an ISO standard that says how many of them are acceptable for us as end-users, so we should just befriend them. In practice, they are just awful, and they ruin our experience, especially when we have to look at them for the entire day.\nMaybe you justify again as I did. \u0026ldquo;But this is a mobile device, I can\u0026rsquo;t expect it to have a perfect screen, if I want better screen I should connect it external screen, and I have to compromise if I don\u0026rsquo;t want to run my battery fast\u0026rdquo;.\nO, please, MacBooks use Retina Display, which is still the best screen available, and the battery stays for much longer than any regular laptop.\nEven if you looking straight at the laptop screen, the colors are matt. You see glowing (dead) pixels, and you not sure if the color shade you picked makes any difference while you try to design a website for iPhone, iPad, and Mac users who have Retina Display, which will see everything at a glance.\nHmm, that\u0026rsquo;s a problem. You solve it partially by buying an external display for $140 or more, but you still don\u0026rsquo;t have the Retina Display many of your clients have.\nMacBook Retina Display pixel can have dead pixels as well, but because these displays have double the density of pixels, they are tough to notice if they exist at all.\nYou will have to invest time to set everything up   Maybe you already noticed, that most of the problems web developers who work on Windows has are related to lack of real command line. The command line provided by default in Windows is just not suitable for any kind of software development.\nSooner or later, you will feel a strong urge to replace it with something closer to the Linux terminal, but you will have to invest your time to do it.\nIf you decide to stick with the native Windows Power Shell, you will waste even more time every time you will want to do anything in it.\nIf you know how much is your hourly rate, you can calculate how much it cost you to deal with \u0026ldquo;Windows Power Shell\u0026rdquo; in the last weeks or months.\nBattery, sucks, charging is slow   Battery is the heaviest element of the laptops. But the heavier they are, the more power they have, and longer I can use them without charging, right?\nI wish that to be true, but no.\nThey are heavy, and they don\u0026rsquo;t last for long. Most of the laptops need charging after 1h of running on the batteries. And when we connect the charger, we have to wait for another 1-2h or more to fill them up - it\u0026rsquo;s hard to call it \u0026ldquo;mobile\u0026rdquo; anymore.\nI don\u0026rsquo;t have an idea why this is true no matter how much money we spend on the laptop. The same problem persist unless we get a MacBook.\nIt\u0026rsquo;s surprising, but somehow guys from Apple, again managed to solve this problem. They build laptops with premium hardware, and we can use them for hours before we had to charge them. And when we finally need to, they charging very fast.\nIf you insist on using a regular laptop, you may think of buying replacement batter (additional cost of $30), and switch them when one goes off. But how will you charge them later?\nWindows gets infected   It\u0026rsquo;s not the matter of if it will happen, but when it will happen. Sooner or later, your laptop will get infected by malware, viruses, trojans and other things created by anti-virus software companies. And if you use your computer for professional purposes, the consequences may be dramatic.\nCan you imagine having your laptop frozen by the screen asking you to pay X amount of dollars to make it go away when you want to continue working on the project for your client? This is called ransomware, it happens for Windows users from time to time.\nMaybe even worse scenario will be to have one or many of these unwanted guests present on your laptop even without you knowing? How \u0026lsquo;bout doing money transfers or buying things online, while keylogger records all your typings. That\u0026rsquo;s a scary scenario!\nIn theory, you can prevent it by buying one of the anti-virus programs and paying about $80 per year for extra security.\nMaybe that sounds fair, but these kinds of applications are special citizens. Many people complain their powerful laptop slowed down massively when they installed one of them. They run the tasks, and updates themselves as they please, not caring much if you are getting your wifi from your phone or you are on the wifi, or you are doing an important presentation.\nAlso, the stories about how people try and fail to uninstall them are legendary.\nOn the other hand, MacBook macOS is very secure. There are no viruses, trojans, or any other terrible things that can infect your computer.\nMaybe you heard about the antivirus for Mac and Linux, but these are pure scams. You have to try really hard to get your MacBook infested with anything, don\u0026rsquo;t get yourself scammed by the people who earn money by spreading false information around.\nI don\u0026rsquo;t know how much it\u0026rsquo;s worth for you to have the peace of mind that data on your laptop is secure, and nobody will steal your credit card details. For many people, that\u0026rsquo;s priceless.\nLaptop is a bulky junk   We already counted plenty of elements where laptop producers are compromising on the quality, and we tried to justify it with the \u0026ldquo;mobility aspect,\u0026rdquo; which turned out to be false.\nI really tried hard to understand the cause of the problem, but I simply can\u0026rsquo;t. Why my laptop weighs 2.5kg or 4kg when it\u0026rsquo;s all made of plastic and cheap components?\nIt just doesn\u0026rsquo;t make any sense.\nHow it\u0026rsquo;s possible that powerful MacBook, with premium hardware, premium display, aluminum cover, sturdy battery weight, only half of it or less?\nIt annoys me very much because years go by and big companies like IBM, HP, Dell doesn\u0026rsquo;t bother to do anything about it. They just add more CPU core, more RAM or disk space, to the same box of junk.\nAt the same time, only one company takes the clients seriously and make every next generation of MacBooks better than the previous one. They also amaze their clients with revolutionary new features, and even more convenience, every single time.\nIf you will need to carry your laptop to the office every day, do yourself a favor and check how much it weight. Put it on weight with all the necessary accessories you carry along.\nI used to carry a 3.5kg laptop, with an external mouse, a protective cover, a charger. My laptop + accessories weight little above 5kg among the other things I should carry, and my back was severely suffering.\nHealth is precious, very precious, and the older we get, the more we become aware of that fact. I don\u0026rsquo;t know how old you are and how well is your health, but if you have the opportunity to weightless on your back daily, this will make a big difference in the long run.\nNo Safari browser, no iOS emulator but Internet Explorer   Safari is only available on macOS. You can download the VirtualBox emulator and run some old version of it, but most of the macOS and iOS users are up to date.\nSo without MacBook, you will not be sure if your design works well on Apple devices.\nIf you have a MacBook, you can even emulate any type of iOS device directly on your Mac, without buying an iPhone or iPad just to check if everything looks fine.\nYou can try to work around it with services like BrowserStack, which costs $30 per month to make snapshots of websites in different browsers. But it barely solves the problem.\nBut having Windows has its benefits as well. You will have native access to infamous Internet Explorer, so you can make the websites for the most popular internet browser, and fix all the glitches.\nNo, really. This can be important, and because it\u0026rsquo;s almost impossible to truly emulate Internet Explorer without Windows. It makes a lot of sense to have a side, fallback laptop with Windows - even cheap one - just to make sure it all looks good if a large number of your clients are using that browser.\nCan I pay extra and get a good laptop with Windows?   No.\nI wish the money would solve all or at least some of the issues mentioned above, but sadly it doesn\u0026rsquo;t work this way.\nYou will get a faster processor, more RAM, bigger disk, and everything else will stay the same.\nLast time I bought a laptop with Windows from the highest shelve, it had even more issues than the middle-class one I get previously simply because the producer didn\u0026rsquo;t test if the new concept does actually works.\nIf you take a closer look, the components of all laptop models, are the same no matter what brand is, or if you buy high end or low-end laptop. That relates to music card, wifi card, graphical chipset, and everything else.\nHow much MacBook really cost?   As you see, the initial price of the laptop is not the one we will end up with.\nThe initial cost is the one thing, but when we add up all of the accessories and other things, we get a hefty sum of money, that we could consider spending a different way.\nEven if we invest money in all the accessories, we still need to carry those, making us wondering if this mobile venture can still be considered as \u0026ldquo;mobile\u0026rdquo;.\nWhen you buy MacBook, it can be a big initial cost - the MacBook which I\u0026rsquo;m using while writing this article, cost me close to $2300.\nYes, it\u0026rsquo;s a lot of money, but when I count all the benefits I get by paying extra, I firmly believe it was 100% worth the money.\nI needed a strong machine because I do a lot of software development, edit images, and videos on a daily basis. I needed emulation for iOS devices and Safari because a vast of my clients are using these. Finally, I needed my laptop to be truly mobile, secure, able to work long hours on the batteries, and charge fast.\nWhat\u0026rsquo;s great about the MacBook - and it\u0026rsquo;s one of the reasons many people buy one - is it comes with a set of very handy, good quality applications like an office suite, iMovie, Garage Band, Quicktime player and more.\nYou don\u0026rsquo;t have to think all the time about the security of data you store or backups. Its all taken care of for by Apple, so you don\u0026rsquo;t have to install additional applications from external vendors and hope that it\u0026rsquo;s would all work together well.\nMacBook don\u0026rsquo;t have to be expensive   If you want to buy a MacBook, you don\u0026rsquo;t have to pay more than the price of \u0026ldquo;laptop with accessories\u0026rdquo;. You can get used to one in very good conditions for less than half of the price of a new one.\nThere are many great second-hand MacBooks sold for a bargain, and if you look around, you will easily found many good ones.\nHey! We are professionals, and we are working many hours using these machines, what\u0026rsquo;s the problem with investing when there is a serious need to do that?\nCan you imagine the plumber that will short change himself going to the clients in the tiny Fiat trying to carry all the stuff he needs to fix the boiler or clear drains for you?\nOr even worse, can you imagine him in the tube or a bus commuting to his clients with all the \u0026ldquo;necessary accessories\u0026rdquo; in his backpack because he wants to save money? Would you still consider him professional of any sort? Is he serious about his work?\nOr can you imagine the surgeon who decided to do the surgery in his shed with kitchen knives because he doesn\u0026rsquo;t want to invest in the proper facility and tools that he needs to do his work in the way he should? Can he still be considered as a surgeon?\nConclusion   I tried hard to make this article as unbiased as possible, and I think I achieved that. I used to use regular laptops for many years, and I was probably the biggest skeptic of all about Apple devices.\nWhen my frustration finally reached the point, I said to myself, \u0026ldquo;that\u0026rsquo;s enough\u0026rdquo;. I was desperate to try something new, and since I buy a MacBook, I never looked behind. The funny thing is I spend far more money trying to make my laptops work the way I want (and never succeed), then if I would by buying the MacBook in the first place.\nAnd if the price stops you from buying MacBook, keep in mind there are plenty of good ones on the second-hand market for a fraction of the price of the new one.\nIf you have any questions related to this video, leave the comment below.\nIf you found this video helpful, smash the like button, so I will be motivated to share more videos with you in the future.\nRemember to leave the comment below with the secret word, so you will have a chance for one on one IT career consulting session with me.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/why-windows-laptops-are-more-expensive-than-macbooks-for-web-developers/","tags":["Hardware","Laptop","Macbook","Web Development","Windows"],"title":"Why Windows Laptops Are More Expensive Than Macbooks for Web Developers"},{"categories":null,"contents":"There quite a lot of code editors on the market, so it\u0026rsquo;s easy to get confused, especially as a beginner developer. And, as we all know, the more obstacles we have on our way, it\u0026rsquo;s less probable that we will reach our destination.\nSo let\u0026rsquo;s remove that obstacle and decide about only one editor that we will be used for coding purposes so we could focus on stuff that matters.\nFor your convenience, I created a list of top free code editors below.\nWhy only free?\nBecause as of 2021, free editors provide all the features web developer could ever dream of just a few years ago. It\u0026rsquo;s just doesn\u0026rsquo;t make sense to buy anything more.\nVisual Studio Code (VSC)      Visual Studio Code screenshot  On the very top of the list landed a real dark horse of recent years. Thanks to big changes in Microsoft attitude from \u0026ldquo;open source is a cancer\u0026rdquo;, to \u0026ldquo;open source is a future\u0026rdquo;, Visual Studio Code joined to the collection of great open source tools that many of us couldn\u0026rsquo;t imagine to code without it.\nVisual Studio Code has all the basic features any coder would expect from the code editor. The most important features are: syntax highlighting, indentation, autocomplete, autosuggestions (via IntelliSense), search and replace, refactoring, buildin debugger, and git integration. And everything is available right from the box. But if you feel that something is missing, you can easily install extensions from the catalog.\nAs of 2021, Microsoft owns Typescript, NPM, and Github you can expect there will be build-in integrations with these tools as well. Because of that, Visual Studio Code becomes an official requirement in many positions, so don\u0026rsquo;t be surprised if on job interview somebody asks you \u0026ldquo;we use Visual Studio Code, do you know how to use it?\u0026rdquo;.\nIt\u0026rsquo;s annoying, but the only thing we can do about it if we don\u0026rsquo;t want to use Visual Studio Code is to at least know the basics, or get to know other editor well enough so we can keep our ground with confidence.\nThe biggest problem with Visual Studio Code is, it\u0026rsquo;s very disruptive and confusing for beginners. That\u0026rsquo;s because of all it\u0026rsquo;s features enabled by default. Code completion and suggestions are great as long we want to type less, but they are terrible when we want to learn to code and train our muscles' memory.\nThe good thing is it\u0026rsquo;s easy to disable disrupting features so we can have an editor that is beginner-friendly again. Alternatively, we can just switch to something else.\nThe Visual Studio Code, have a moderate appetite for resources. The bundle weight about 200MB, and it\u0026rsquo;s requires twice as much RAM to run.\nIf you are just starting, do yourself a big favor and disable IntelliSense (VSC autosuggestion \u0026amp; autocompletion). You can turn it on later when you would have all the knowledge in the tips of your fingers already.\nlinks    code.visualstudio.com  Emacs      Emacs screenshot (spacemacs)  Surprised?! You shouldn\u0026rsquo;t be. Emacs is my favorite code editor, and this is my blog, so it had to happen.\nOk, but seriously, the reasons why I consider Emacs as one of the best editors are flexibility, user-friendliness, feature richness, great support for any code management systems like git, and all the other features we can imagine. Yes, Emacs has it all and much more. But then why not so many people use it?\nThe main reason is that there is no big company like Google, Facebook, or Microsoft standing behind this project. There are no millions of dollars pumped to make it a popular tool. These days Emacs is a tool made by geeks for geeks. If you want a particular feature, you either code it yourself or ask for help on online forums, and these communities are very helpful.\nEmacs is not only a good editor for coding, but it has many other advanced features that put it more into the position of the operating system rather than just code editor. If at any point, you will decide to learn Emacs for coding purposes, the ocean of possibilities will be open for you. Just to mention some of it\u0026rsquo;s features: task manager, notes organizer, email client, encrypted journals and notes, accounting, spreadsheets, authoring books, browsing websites, just to mention a few.\nEmacs is powerful, but it\u0026rsquo;s learning curve is very steep, so if you are just starting to learn to code, there are better options for you, so you can focus on coding in the language of your choice rather than spending time on Emacs.\nOtherwise, if you are looking for an ideal tool, not only for coding but literally for almost everything, try Emacs.\nlinks    www.gnu.org/software/emacs www.spacemacs.org emacs.stackexchange.com orgmode.org www.emacswiki.org/emacs/Evil  VIM      VIM screenshot  VIM become very popular in the last ten years due to the popularity of open-source and Ruby on Rails framework. Because of that, plenty of features and extensions were added, making this \u0026ldquo;simple\u0026rdquo; text editor serious competitor even for paid tools.\nVIM provides syntax highlight, indentation, code execution, code completion, and anything you would need. But these features are not available straight after install. You would need to install additional plugins to make it work the way you want.\nThere is a pretty steep learning curve to become fluent with VIM as it works in a different manner than a typical text editor.\nThe biggest asset of the VIM is its user interface - and for some people, it\u0026rsquo;s its biggest problem.\nThe VIM was created in the times when there were no arrow keys on the keyboard!\nWhat\u0026rsquo;s surprising is that today we have arrow keys on every keyboard, but VIM navigation system is still considered as the best by many.\nAs a user, you can work with the text document in three modes: normal, insert, and visual. Normal mode is for navigating between pages, words, characters and paragraphs, and for edition. Insert mode is reserved for typing only. Visual mode is used for selecting part of the text and performing operations on it. You either love it or hate it. If you haven\u0026rsquo;t try VIM yet, you should give it a shot.\nI felt in love with VIM for the very first moment I used it. It was different, it wasn\u0026rsquo;t easy, but when I learned the basics, I realized it\u0026rsquo;s navigation system is the best it can be. That\u0026rsquo;s why I adapted Emacs to use VIM navigation, so I have got the best from two worlds.\nYou can use VIM in any operating system.\nlinks    www.vim.org neovim.io/ vi.stackexchange.com  Sublime Text      SublimeText screenshot  Before Visual Studio Code dominated the coding world, Sublime Text was the most popular editor.\nToday it\u0026rsquo;s still good editor. It\u0026rsquo;s fast, and minimal. It has basic features right from the box like syntax highlighting, indentions, code completion, search \u0026amp; replace. But if you want to use it for serious development, you will have to install additional packages, so there is a learning curve in it.\nWhen you switch from editor like Visual Studio Code to Sublime Text, you will probably have a feeling that many features are missing, and it doesn\u0026rsquo;t scale well on bigger projects, and you are right. The bigger the project, the more you can have a feeling that Sublime Text is not good enough, and you need something more robust.\nThese days, Visual Studio Code is a much better brother of Sublime Text, for any size of projects. But it\u0026rsquo;s worth considering using Sublime Text as a fast alternative. I use it for making quick notes and drafts.\nIt\u0026rsquo;s very lightweight, the binary size is only 60MB comparing to Visual Studio Code (around 200MB), and Atom (around 500MB). The system requirements are much lower than for other editors. So if you don\u0026rsquo;t have plenty of RAM and disk space, Sublime Text can be a good choice for you.\nBTW Sublime Text is kind of free but with an asterisk. After X amount of time, you save changes in edited files; it will ask you if you want to buy a license for about $60. You can just click \u0026lsquo;no\u0026rsquo; and continue. It\u0026rsquo;s not that big deal. But if you see this popup many times a day, you may want to consider buying it for switching to different option.\nSublime Text is available for MacOS, Windows, and Linux.\nlinks    www.sublimetext.com/  Atom      Atom screenshot  Atom for a long time was considered Sublime Text but free. It\u0026rsquo;s only half truth, but fairly accurate. Atom gives similar to Sublime Text user interface, but today Atom is so much more than Sublime Text ever was.\nIt provides a unique feature called Tyletype, where you can invite others to come along and code together on the same sample of code. After activation, you will see other people typing code on your screen. This is a great feature for teachers and mentors. It also helps remote teams solve issues in code.\nAtom has native integration with Github, so it\u0026rsquo;s very simple to perform any operations without leaving the editor. It has autocompletion similar to Visual Studio Code, search and replace.\nIf you feel something is missing, you can easily install additional packages with build-in package manager. You can also create your own packages using the Electron.js framework.\nThe only problem I found with Atom is, it\u0026rsquo;s heavy weight. It was built on Electron.js framework, like Visual Studio Code, so it requires a lot of resources to run. When I last time installed the bundle, it weighted 455mb, and it takes slightly more RAM to run it.\nAtom works on across operating systems, so you can use it no matter what system you are using.\nlinks    atom.io  Conclusion   So here it is, the best code editors for web developers in 2021.\nIf you are a beginner and you wish I would give you only one, sorry. All of them are good.\nThere is no silver bullet, but I strongly believe every programmer should know how to use VIM. Not because it\u0026rsquo;s the best editor by any means, but because it\u0026rsquo;s the command line tool, and you can use it when the graphical environment is not available like during SSH session, or while working in console, which is very handy.\nIf you are not working in the console environment, you can choose from any of the other four. Give each of them a chance for at least a day, and you will build an opinion if it\u0026rsquo;s right for you or not.\nBut if you are just starting, choosing Visual Studio Code or Atom will be the best decision for you. Other editors require much more tinkering and have much steeper learning curve, especially VIM and Emacs.\nIf you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/best-code-editor-for-web-development-2021/","tags":["Atom","Editor","Emacs","IDE","Spacemacs","Sublime Text","Vim","Visual Studio Code","Web Development"],"title":"Best Code Editor for Web Development 2021"},{"categories":null,"contents":"Command line is one of these things that officially nobody expects you to know, but if you don\u0026rsquo;t know if you will struggle hard in your entire IT career.\nIf you do anything with Linux and you don\u0026rsquo;t know the command line, it\u0026rsquo;s about time to change it.\nIn this post, you will learn the basics of the Linux command line, focusing only on the essential parts that you will be using 90% of the time.\nBy the way, all the information in this post relates to the terminal in Linux and macOS. I don\u0026rsquo;t cover the Windows command line here, which used to be significantly different.\nCommand Line, Terminal, Console   First, let\u0026rsquo;s clear the meaning of this word because, as you probably have noticed, some people say command line, terminal, or console interchangeably.\nA terminal runs in a graphical environment on its own window.\nThe console mode is available when we didn\u0026rsquo;t start a graphical environment, or we boot our computer is one of recovery or emergency modes.\nIn practice, there is no much of the difference if we run the command line in the console or terminal. This is probably the biggest reason why people use phrases command line, terminal, and console as aliases. To make things simpler, I will do exactly the same in this post. So don\u0026rsquo;t get confused when I use any of these three. Let\u0026rsquo;s assume they all mean the same.\nAre you wondering if the command line is something that you should learn?\nLet\u0026rsquo;s address that as well.\nWhy to learn the command line?   If you already started learning to code, you probably noticed that almost every tutorial you can find, relate to some console commands that you need to invoke before you would be able to create your app.\nEven after that, you pass that stage; you will have to run more commands to run tests, build the project, and deploy the changes to the server. Everything happens via the command line.\nThe truth is, everyone who is building his career as a programmer today needs to know at least the basics of the Linux command line. Without it, we just can\u0026rsquo;t do our work.\nTo give you an example. Let say you want to set up a Python development environment. You will need to install Python from the command line. To install additional Python packages, you will need to use the command line tool called pip.\nThe same is true for projects build in Node.js, React, Angular, Ruby, or literally anything else.\nSometimes you can be lucky, and you will find a gui wrapper for common terminal tool. Still, most of the time, these wrappers have limited functionalities, and they are not reliable for professional work.\nCommand line is the king, and it\u0026rsquo;s just very, very painful to don\u0026rsquo;t know the basics.\nBut I have good news for you. In this post, you will learn everything you need to know to start using command line tools, straight away.\nI will not exhaust the entire topic because it would take plenty of hours to do so. And it just doesn\u0026rsquo;t make sense to duplicate all the information that is already available over the internet.\nYou can always deepen your knowledge later as much as you like, it\u0026rsquo;s up to you.\nHow to open command line?   If you are on macOS to open command line press Command+space and type \u0026lsquo;terminal\u0026rsquo;, then click on the first result that will appear.\nOn the Linux, it all depends on the Linux distribution and graphical environment you are using if you can\u0026rsquo;t find any related icon on the screen, ask Google for help.\nNow, let\u0026rsquo;s get started with the first command.\nManuals   Manuals are awesome! They let you get the list and descriptions of all the features of the command you are interested in. When you start working with the terminal, you will love them.\nTo open the manual of specific command just type:\nman For example you can type man mkdir to open manual for mkdir command.\nYou can even run\nman man To get the manual about using the man command.\nWhen you start working with the Linux command line, you will quickly notice that most of the commands have manuals available. You don\u0026rsquo;t have to ask Google how to use particular command and what parameters are available, and you can do that without leaving console.\nIf you use a very minimalistic Linux environment, it\u0026rsquo;s possible that the manuals are not available. That means they aren\u0026rsquo;t installed.\nVery often, we run as minimal Linux instance as possible, to save precious resources for more critical tasks. In that case, many of the optional features are stripped off. But if you need any of them, you can install them at any time. Just type in Google \u0026ldquo;X install man\u0026rdquo; where X is the name of your Linux distribution, for example, Debian or Fedora, and follow the instructions.\nUnderstanding file path   In the Linux command line there are two ways of targeting the file or directory - by providing an absolute or relative path.\nThe absolute path is the path that starts from the lowest directory level, which is /. The relative path starts from where we are now.\nThe move one folder level down, we use two dots ...\nThe single dot character . represents the current working directory.\nThere is also a special character ~ which means the current user home directory.\nGetting current directory path   If you work a lot in the terminal, you may lose orientation in which folder you are. It\u0026rsquo;s a good idea to know in what place we are before we start changing things.\nYour terminal prompt may show you already your working directory, or it shows you the last folder in the path - to keep it short. But if that\u0026rsquo;s not the case you can always get the current directory path by running:\npwd The output may look like this.\n/usr/local/bin This command will return the complete working directory path, so you will know exactly where you are.\nFor more information about the usage of the pwd command type man pwd.\nMoving around   To move from one folder to another, we use the single command:\ncd [path-to-directory] As an optional parameter, you can put the absolute or relative path to the directory you want to switch to.\nAnother way of using this command is by calling it without giving it any parameters. That is equivalent to running cd ~, it will set the current working directory to the current user home directory.\nIf you run:\ncd .. That command will set the current working directory to the directory one level lower in the current path. For example, if you are at /usr/local/bin after running this command, you will land at /usr/local.\nFor more information about the usage of the cd command type man cd.\nListing directory content   Listing content of the directory is very handy, and you can do it by running:\nls [path-to-directory] When you just run this command without any parameters, it will list the content of the current directory.\nHave you noticed something? That\u0026rsquo;s right! The Linux nerds make it very easy for us to use the terminal. The main reason why they did that is, they use it as well, for many hours a day, so they want it to be easy too.\nYou can also pass the path to the directory you want the content to list on the screen.\nThere is a chance that returned folders and files will look all the same, so it\u0026rsquo;s impossible to differentiate folders from regular files. To fix that, you can add additional parameter -G (for macOS) or --color=auto (for Linux) to display colored output. It makes the output much more readable.\nls --color=auto If you prefer to have colored output every single time you run ls command, run this command\necho \u0026#34;alias ls=\u0026#39;ls --color=auto\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bash_profile \u0026amp;amp;\u0026amp;amp; source ~/.bash_profile That will set an alias in your user .bash_profile configuration file for your user that will make every invocation of ls include parameter --color=auto as well. It will also read the configuration file so the alias will be available immediately.\nFor more information about the usage of the ls command type man ls.\nCreating a folder   To create directory call:\nmkdir [-p] directory-name That command will create directory-name in the current folder.\nThe most commonly used additional parameter is -p. It will let you pass not only the folder name but the entire path for the new folder. It will create a target folder and all the intermediate folders needed to make the path valid.\nFor more information about the usage of the mkdir command type man mkdir.\nMoving file or folder   To move files and folders, you call the command:\nmv target-file target-destination That command will move target-file from the current folder to target-destination.\nFor more information about the usage of the mv command type man mv.\nCoping file or folder   To copy files from one location to another, you use the command:\ncp [-r] target-file target-destination You can also use this command to copy folders, but you have to pass additional parameter -r.\nFor more information about the usage of the cp command type man cp.\nSearching for file   From time to time, we need to find a file or folder with particular characteristics, like, for example, a specific name or containing phrase in its name.\nFor this task, we can use the powerful find command. This command has very complex and can be used in many ways. You can find all of the ways to use this command by reading it\u0026rsquo;s by manual. To display manual for find command, type:\nman find For more information about the usage of the find command type man find.\nSearching for files that contain the phrase   Another common task is searching for the file containing a specific phrase. It\u0026rsquo;s effortless to do it using the Linux command line, just run the command:\ngrep phrase target-file That command will return the line of text from the target-file that contains the searched phrase.\nYou can also run grep to search for a phrase through all the files available in directory and subdirectories. You do it by running:\ngrep -H -R phrase target-folder That makes grep run recursively in target-folder returning the lines of text that contain the phrase and name of the files in all the files in target-folder, and it\u0026rsquo;s subfolders.\nFor more information about the usage of the grep command type man grep.\nUsing git in terminal   Git is purely the terminal tool.\nIf you worked with git without using the terminal, you have been using either gui wrapper or code editor plugin.\nThat\u0026rsquo;s what most of the developers do though their careers. They are afraid of the terminal, and they don\u0026rsquo;t want to make an exception for the git. So they use the wrappers.\nWhat they miss are advanced features that are not available outside console or hard to use in the wrappers. They probably don\u0026rsquo;t know how the git really works, and what operations are necessary to be done to perform common tasks.\nGit run from the terminal makes it very clear what we do and why we do it.\nGit is a reason enough to learn the basics of the command line.\nGive it a shot. Soon you will see how convenient and easy it is, and maybe as many others did, you will switch any git related task to be done in the terminal.\nFor more information about the usage of the git command type man git.\nInitialize git repository   When we starting new project, before we can start staging, pushing, pulling, merging and all other things we need to initialize git repotitory.\nThe simple command for it is:\ngit init After that you are free to run any the git command.\nCloning git repository   If you want to work with some existing repository you found online - for example on the Github. You would need to clone this repository to your local workspace. To do that run:\ngit clone [optional-folder-name] This command will create new folder, named after project name, and copy it\u0026rsquo;s concent into that folder.\nIf the project has any modules you can clone the project and all of it\u0026rsquo;s modules at once by running instead:\ngit clone [optional-folder-name] --recurse-submodules --remote-submodules This command will also update the modules to it\u0026rsquo;s latest versions (the --remote-submodules parameter).\nIn this tutorial I will give you only the basics of git in command line. This topics definitely deserves separate article, so I will craft one for your convenience.\nSubtle differences between command lines   Every Linux and macOS system has some form of the command line.\nWe can say that Linux reached the level of maturity to the point; its command line didn\u0026rsquo;t change much in the last years.\nMacOS tends to be more dynamic, and the terminal may vary between one major version to another.\nI created a shortlist of most common differences so that you will avoid surprises along the way.\nHere are the most differences between Linux and macOS command lines.\nIf you switch from Linux to macOS terminal fairly often, you will probably notice even more differences than the one mentioned below. Don\u0026rsquo;t get discouraged, there is always some way around or counterpart available. If you get stuck, try to ask on our Discord channel or ask Google.\nMacOS command line is more strict about parameters   Linux is very liberal when you can put command parameters. Most often, you can put them in any order you like, so if you forgot to add the parameter at the beginning, you probably still can do it at the end.\nMacOS wouldn\u0026rsquo;t let you do that. All the parameters have to be passed before the directory or file name you are targeting. So if you would try to glue the missing parameter at the end of the command, the command will complain that it was used in the wrong way.\nSome of the commands are different   MacOS has special commands to do things like creating new users, adding a user to the group etc.\nEvery Linux distribution performs these tasks, in the same way, no matter what Linux distribution you are using.\nFor example, to create a new user on Linux, you would call useradd, to do the same on macOS you need to run dscl or sysadminctl -addUser (depending on macOS version you are using).\nOn macOS, some of the commands have different parameters   For example, while using popular sed command on Linux, you may use -r parameter to invoke extended regular expressions. The achieve the same effect on macOS, you use -E instead.\nThe same is true about the ls command we mentioned before. To have colored output on macOS you can\u0026rsquo;t run --color=auto, because that option doesn\u0026rsquo;t exist. You should use -G instead, to achieve similar results.\nBonus tip   Most of the Linux distributions run Bash as the default shell. This is a tool and programming language itself. But if you are a programmer, you may want to replace it with zsh. zsh is fully compatible with Bash, and it provides many features that make the life of the programmer so much simpler.\nMy favorite is git projects support and files \u0026amp; folders name autosuggestions.\nYou can find more about this project here.\nThis project will help you install additional extensions oh-my-zsh.\nConclusion   Congratulations, now you know the basics of using the Linux command line.\nThe command line is a very powerful tool, and every software developer, no matter what language he is using, is obligated to know at least the basics of it.\nI hope after you read this article, the Linux command line doesn\u0026rsquo;t sound cryptic for you anymore, and you will be able to perform simple tasks using the command mentioned above.\nIf you not only read this article but also run some of these commands on your own, big plus for you. Because you will train, you will train your muscles to remember them. If you didn\u0026rsquo;t, give yourself a couple of minutes to play around with these commands now, so the last 5 minutes spent on reading this article will not be wasted.\nIf you don\u0026rsquo;t have the command line on your computer or you are using Windows, use one of the online command lines available. You can find them by asking Google \u0026ldquo;online bash repl\u0026rdquo;. Here is a good working example.\nIf you have any questions related to this post, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAs always, stay focused!\n","permalink":"https://devakimbo.com/blog/linux-command-line-for-beginners/","tags":["Beginner","Command Line","Git","Programming"],"title":"Linux Command Line for Beginners"},{"categories":null,"contents":"There is a lot of confusion about what the website and web application are. And there is a good reason for that. They look very similar at first glance, just another we page - bunch of HTML, CSS, Javascript, and some images. The differences lie undercovers.\nLet\u0026rsquo;s define what website and web application really means.\nWhat is the website?   You can think of a website as web pages that are served in the same form they were sent by the server - as a collection of HTML, CSS, Javascript files, and images.\nEvery time a user switches between pages, another request to the server is made, and the new view is returned every time as HTML, CSS, Javascript images, and so on.\nA typical website can by a static HTML document served from the server (with all the complementary resources) or dynamic HTML rendered by the server, for example, by Wordpress.\nMost of the time, websites don\u0026rsquo;t use fancy modern Javascript frameworks like React, Angular, or Vue, because they don\u0026rsquo;t have to. An entire HTML document is already rendered on the server, styles are provided, and user interactions are served by good old jQuery or even plain Javascript.\nAlternative ways to build a websites   In practice, you don\u0026rsquo;t have to build a website if you need one, you can avoid buying the hosting, setting up the server and all of this web admin burden by using one of the services like Wix, Squarespace, or Webflow.\nYou don\u0026rsquo;t even have to know how to code. You just browse the catalog of templates and choose the one that you think will be a good base for your website. You amend it as needed by using drag and drop editor, so no coding is required. When you finish, just publish it. Everything else will be taken care of for you.\nOf course, you have to pay a bit extra for this convenience, but for many people, this extra price is a bargain, compering of the time saved, not thinking about buying good hosting, hiring a developer, and hoping for the best.\nYou can also achieve a similar result by hosting your website on one of CMS systems like Wordpress. It also has drag \u0026amp; drop plugins that you can use to implement the design. There is definitely more of the work involved rather than by using plug \u0026amp; play service, but it can be a better solution if you need more flexibility and freedom in the long run.\nWhat is a web application?   Web application, on the other hand, receive application code on the initial request from the server. After that, the HTML views are rendered and modified on the fly by the web application written in Javascript. When needed, web application makes asynchronous Ajax request to the server RestAPI to fetch more data. The server sends the response in JSON format, not as ready to be displayed HTML document. The front end layer receives JSON data and decides how to present it to the user.\nSometimes the initial server response involves generating an HTML page as well, but every subsequent request are served in JSON format. These kinds of web applications are called universal because part of the rendering is happening on the server site.\nBuilding web application instead of regular website helps reduce bandwidth, increase performance \u0026amp; scalability, and overall user experience. But the costs of creating and maintaining such an application are much higher because of the number of layers that needs to be implemented like: server security, authentication, RestAPI, and data persistence.\nSome very complex websites like modern Facebook can only be built as web applications. It was necessary to create frameworks like React, Angular, or Vue, to implement their advanced features.\nWeb applications are built with the front end part and back end part. What\u0026rsquo;s important to mention is that the web application can exist without the front end part and without the back end, but at least one of them has to be provided.\nWeb application with front end only   In the simplest scenario, you can build a web application that only serves the code that is executed on the clients' browser and doesn\u0026rsquo;t interact further with the server or any backend part.\nThese types of applications can use your browser data storage features and even work offline.\nThe problem with them is that when working with any application we want to process and store data. While you have only the front end part without the back end, you will not be able to do any sophisticated processing other than the one you can run via Javascript in your browser. So most of the time, these kinds of applications will be only to consume data, not produce or process.\nAs you see, you can still build web applications without the back end, but the features will be very limited.\nWeb application with back end only   Yes, it\u0026rsquo;s possible to build a web application without the front end part. How to do that?\nYou simply implement the back end part only. So in the result, you will have working RestAPI web services, security layer, and working server that respond to the incoming requests.\nPrivileged clients would make a request to your server and receive expected data on the other end.\nYes, this is a fully legit web application, and there are plenty it\u0026rsquo;s examples around the internet.\nWhen you start looking at web application development from the perspective of the RestAPI server, you will feel liberated from the necessity of having the front end part.\nAs a front end for this kind of application, we can use anything that can make an API request. You can use popular API clients like Insomnia, Postman, or even Linux console tool curl. They all can serve as a front end for your application.\nWeb application with front end and back end   This scenario is most often in the mind of the people who are interested in web application development.\nAs you already know, either front end and back end part are optional. You just need one of them to have a web application.\nThe development tasks for a web application can be split between two groups of developers. One group, front end developers, will take care of the implementation of user interface and interactions, and the second group will take care of the back end.\nThese teams don\u0026rsquo;t interfere with each other. They just have to agree on the shape of API and can work independently.\nIt\u0026rsquo;s very common practice to have a single team of people that performs all of these tasks. They are called full-stack developers. They are savvy about the front end and back end so they can contribute to both parts of the application. This kind of scenario is most common in startups, where the team is small and multidisciplinary.\nWhen to build a website instead of a web application?   Most modern businesses don\u0026rsquo;t need web applications. The website would do a better job.\nIf you are a business owner or freelancer, and you need a platform to host your portfolio, contact information, your offer, or even online shop - these are probably more than 60% of the websites already available online - the website would be sufficient.\nWebsites are far, cheaper, and easier to build, maintain, and scale than web applications. And you don\u0026rsquo;t need to know a specialized framework to build them. In the simplest scenario, you can just take a free CMS system like Wordpress and adapt it to your requirements.\nWhen to build a web application instead of a website?   The best way to decide if you need the web application instead of the website is to ask yourself a question, \u0026ldquo;can I achieve the same result by just having a website\u0026rdquo;?\nAsking this question is crucial because the costs of building and maintaining a web application are much higher than the website both in time and money.\nThe most common scenarios where building web application is justified are SaaS services, RestAPI available for multiple clients, sophisticated live dashboards with graphs, applications that have to be available offline.\nThat\u0026rsquo;s it. If your idea doesn\u0026rsquo;t fit into any one of these, you will do just fine by having a website rather than a web application.\nIf you feel a little disappointed because you wanted to use that modern Javascript framework to build your next project instead of creating just a website, feel free to do so. Learning is another great reason to choose a web application instead of just a website.\nConclusion   So, know you know what the difference between website and web application, and when choose to build one or the other.\nYou probably now understand why most of the internet is build using regular websites rather than fully-fledged web applications. The one reason is, the websites were here far earlier before web applications show up. The second reason is, most of the time, websites are just good enough, and nobody wants to overpay.\nBut if you want to focus on building web applications, do it! There is a huge market waiting for your services, so you can make a good living while building web applications.\nIf you have any questions related to this video, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nSee you next time, and as always, stay focused!\n","permalink":"https://devakimbo.com/blog/web-app-vs-website/","tags":["Back End","Front End","Beginner"],"title":"Web App vs Website"},{"categories":null,"contents":"In this post, I\u0026rsquo;m going to share with you the five best methods to learn programming. These rules help me learn new programming languages, frameworks, and other technologies like databases in just couple of days.\nI will also give you a bonus method, that if I knew it sooner, it would save me plenty of time and money in all the opportunities I missed.\nIf you commit yourself to follow these rules, I promise your programming learning will skyrocket.\nIf some of them sound too simple to be true, then give them a try every day, for a week, and check how much progress you have made. How much more confident you feel about the technology you are learning.\nYou will notice that all of these rules are connected, and they play together very well.\nLet\u0026rsquo;s start with the first one, which is\u0026hellip;\nCode a lot   First and foremost, you have to code a lot.\nYou don\u0026rsquo;t have to wait until you read all of the coding books or watch all the gurus on Youtube to write code. You don\u0026rsquo;t have to wait until you are a good programmer before you start coding. If you wait for it to happen, let me tell you, it will never happen.\nYou don\u0026rsquo;t have to wait for any permission from anyone to start turning your ideas into code.\nGive yourself permission to be a bad coder, or really, really bad coder before you become a good one. By doing it, it doesn\u0026rsquo;t matter how good you are. What matters is you are moving forward.\nEven if you already are an advanced coder, if you give yourself a break from coding for a couple of weeks, or months, you will notice that you are not as sharp as you used to be. It\u0026rsquo;s the same as with foreign languages. When we don\u0026rsquo;t use them, we forget them.\nThat\u0026rsquo;s how our brain works. It\u0026rsquo;s expensive to keep all the connections between neurons, to all this data, words, rules, grammatics, we are learning. So our brain tries to save precious energy and reduce the connections that are not needed, or delete them entirely. It\u0026rsquo;s only up to us if we keep them in good shape. If we do not do that, we will lose what we learned.\nPut aside at least 1 hour every day for coding. But keep in mind \u0026ldquo;coding\u0026rdquo; means writing code, not reading about someone who is coding, or watching some people talk about coding.\nIf you are a coder, or you want to be one, you have to code.\nDon\u0026rsquo;t copy\u0026amp;paste, type everything instead   We learn programming like we learn everything in our lives, by repetitions, trials, and errors.\nOften times, when we are looking for a solution to a particular programming problem, we ask Google a question, and we get an answer. Everyone is doing it, no matter how pro he is.\nThe trick here is not to copy\u0026amp;paste the solution but to type it. This rule is simple when you copy\u0026amp;paste, you don\u0026rsquo;t learn anything.\nIf your goal is to make progress, to reach the level when you do not need to look for answers online, copy\u0026amp;paste and pray to make it work, learn to type everything on your own.\nI know it\u0026rsquo;s very counterintuitive, but the difference it makes can\u0026rsquo;t be overemphasized.\nWhen you learn to code, you will notice that most of the tutorials provide a complete codebase at the end.\nRemember, it\u0026rsquo;s not about who will collect the most of the code from the internet, or who will type less on the keyboard will win. The opposite is true. Who will type more, who will code more will become better coder faster.\nBut it doesn\u0026rsquo;t apply if you are on the hackathon, then you probably want to have code that works fast.\nThe only way to learn from the tutorials is to follow along the way and type everything. Even if you just retyping what is already on the screen, by typing, you train your muscles how the coding in language or framework X looks like. You will have this knowledge at your fingertips next time when you will need it.\nUse code completion only for variable or class names, or not use it at all   If I knew this rule when I started learning to code 15 years ago, I would have made much more progress in far less time.\nCode completion is a great feature. It\u0026rsquo;s provided in every modern code editor natively or by an extension. Often it\u0026rsquo;s enabled by default, and as in Visual Studio Code, when we just start typing the code completion, suggestions will start to pop up on the screen. We will get hints about variable names, function names, classes, semantics, and everything else.\nAfter years of programming, I found that I rarely need any help to remember semantic or build-in types. What I found useful is completing variable names, but only on demand. I don\u0026rsquo;t like it when I start typing a variable name, and the window shows up along. It\u0026rsquo;s very disruptive to the creative process. It\u0026rsquo;s much better to have these hints on-demand only when they are needed.\nCode completion, not only disrupts our flow of thoughts but also interrupts the process when we train coding muscles the language semantic.\nThis problem is very similar to copy\u0026amp;paste. Instead of typing a code, something does this for us, so we don\u0026rsquo;t learn anything.\nAt some point, you have to know to code complete your code yourself. To know it, you have to know-how. Reading the script will not help.\nLearn only the things slightly above your level   There are plenty of advanced tutorials about connecting different technologies, optimizing performance, or do something cool using a new framework. These things can be inspiring, but most of the time, they are just hypes, very biased opinions, or copies from other websites.\nWhat you can do instead is to spend some time to find the tutorial that is exactly what you are looking for. If you are very deliberate about what you are looking for, it\u0026rsquo;s a good chance you will find the perfect one.\nIf the tutorial you have found introduces new technologies, solves weird problems that you didn\u0026rsquo;t know exist, or looks unrelated in any way, skip it. Find different ones that match your expectations, and it\u0026rsquo;s structured in the way you can follow.\nLearn only what you will need now   While learning new technology, it\u0026rsquo;s tempting to get \u0026ldquo;the complete\u0026rdquo; or \u0026ldquo;the ultimate tutorial about X\u0026rdquo;, not just \u0026ldquo;how to do X with Y\u0026rdquo;.\nThe problem with it is that this attitude makes us very easy to get overwhelmed by the amount of data we put on our plate. It\u0026rsquo;s normal that we want the ultimate, the complete guide, not just guide, but the truth is, when we try to get everything at once, we will get nothing.\nOn the other hand, when we look for the answer only for a particular problem, we can find the resource that answers our question without introducing unnecessary confusion.\nI found the \u0026ldquo;complete\u0026rdquo;, or \u0026ldquo;ultimate\u0026rdquo; guides to be for advanced programmers who know other technologies and what to grasp how it would look like to do similar things in different technology.\nIt\u0026rsquo;s so much easier to learn Python by just writing simple console application, rather than using Django. The same with Javascript and React, or Ruby and Ruby on Rails.\nBONUS tip: cut off all the noise   Focus only on one thing at a time.\nThis tip relates to the illusion of productivity and information overload.\nBy the illusion of productivity, I mean a situation when we spend 80% of the time watching and reading about coding and 20% of the time or less on coding.\nIt\u0026rsquo;s very easy to get into the trap of an illusion that by consuming more content, we are learning something. It\u0026rsquo;s impossible to be better coder after watching X Youtube videos about programming. We can be better coders only by coding.\nInformation overload is when we don\u0026rsquo;t know what to do next because everyone is telling us that their X, Y or Z is the best way. So who should I trust? You should choose your own path that the most appeals to you and gives you the most market advantage.\nIf you are learning to React, don\u0026rsquo;t start with learning React+Redux or React+GraphQL. Learn how to do things first using just React. Without this knowledge, you will not know what problems React + GraphQL or Redux are solving, and when it makes sense to use it or when it will be overkill.\nConclusion   That\u0026rsquo;s it. The best methods to learn a programming language quickly. I found them very helpful through my programming journey, and I\u0026rsquo;m sure they will work well for you as well if you give them a fair chance.\nI challenge you to use them every day for seven days, and you will notice a huge difference in the amount of information you will learn and your level of fluency in a programming language that you are after.\nThese rules will work either if you want to learn to code in Python, Javascript, React, Angular, Node.js, even databases like Mysql, MongoDB, or any other technologies.\nIf you have your own best ways to learn, programming language leave them in the comments below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAnd as always, stay focused!\n","permalink":"https://devakimbo.com/blog/the-5-best-methods-to-learn-programming/","tags":["Beginner","Programming"],"title":"The 5 Best Methods to Learn Programming"},{"categories":null,"contents":"In this post, I\u0026rsquo;m gonna teach you what object oriented programming is. I will skip all the bollocks and explain it to you in the simplest way ever, buy using a video game as an example.\nThe simplest way to describe object oriented programming (also called OOP) is to use a game analogy. Why, because most of the video games are built using object oriented paradigm.\nThe Game   Let\u0026rsquo;s use the example of the game where we have two races fighting with each other \u0026ldquo;Human and Goblins\u0026rdquo;. It\u0026rsquo;s a 3rd person perspective role-playing game, and you can take a side of goblins or humans.\nIf you choose humans, you will lead a group of human heroes protecting peasants from bands of goblins. If you choose goblins, you will lead a group of goblin heroes protecting peasants from bands of humans.\nWe will use UML2 class diagram notation for modeling.\nClasses and objects   To model this world, we will have object Human. It can look like this. Human has properties typical to the characteristics that all of us has. He has a first name, last name, date of birth, gender, and national insurance number.    UML2 class diagram for Human type \nHe also has some methods that we can invoke on him. We can make him consume some food, rest for X number of hours, sniff some object, and so on. This is the definition of the class Human, and this class is used to create objects of type Human. Every object we create using this class will have this set of properties and methods.\nLet\u0026rsquo;s create a class Goblin.\nAs you can see, the Goblin class is very similar to Human. It has almost the same set of properties and methods. The only difference is goblins can play goblin chess while Human play regular chess. They also have different insurance numbers.\n   UML2 class diagram for Human and Goblin types  Because there are so many commonalities between these two classes, we can try to model it in a more object oriented way.\nInheritance   Now, as you see we created class Humanoid, which is a class that both classes Human and Goblin may inherit. We can move all the common properties and methods to the new class.\nThe class like Humanoid is called parent class or superclass for both Human and Goblin classes. The Human and Goblin classes now become subclasses or child classes of Humanoid. This is a simple inheritance scenario in object oriented programming.\n   UML2 class diagram for with inheritance  Let\u0026rsquo;s assume in our game the world has more species than just humans and goblins. We have a deers and boars as well. Again, both of these types have set of properties and methods similar to Humanoids. But can we consider these objects as a humanoids?\n   UML2 class diagram for Deer and Boar types  Not really. What we can do instead is to create another class, let\u0026rsquo;s call it Animal that will gather properties common for all the animals in the game.\n   UML2 class diagram for Animal type  Now, as you see, it looks much better. We moved all the common properties to the shared superclass, and our diagram looks much cleaner.\nBut as you see, we still have a duplication here. There are a lot of similarities between Humanoid and Animal, but we don\u0026rsquo;t want to create an inheritance relationship between them. What we can do is to introduce another class that will be superclass for both Human and Animal.\nGeneralization   That\u0026rsquo;s what we have got. We introduced class Creature. It gathers all the shared properties and methods for both Human and Animal classes.\n   UML2 class diagram for Creature type  This is multiple level inheritance because the depth of it is more than 2.\nWhat worth noticing here is that we will never want to create an instance of class Animal, Humanoid, or Creature. These classes are just carriers of shared properties and methods that help us model the app in the way we want. Because of that, these classes are called abstract; to communicate, they are not meant to be instantiated. We won\u0026rsquo;t be creating any objects from them.\nWe can create as many levels of abstractions as want, but it should be justified. We don\u0026rsquo;t want to complicate our app.\nOur example shows that this multi-level hierarchy was necessary to achieve an optimal model that will work for us. Everything was done for a reason.\nInteractions   Ok, so we have all of these classes. Maybe you asking yourself a question about how it all interact with each other to make a game?\nThe objects we created are our application model. They don\u0026rsquo;t provide any functionalities. They are just figures. To wrap it up into a game, we need much more than that.\nBut let\u0026rsquo;s keep things as simple as possible and assume we have all the pieces. To create the game we need some controller.\nLet\u0026rsquo;s create another class named Game, which will be our controller class. This class will generate humans, animals, and goblins and make them interact with each other.\n   UML2 class diagram for Game type  The Game class will create only one object of the game at a time. When that happens, it will render the world of the game and put all the creatures into it. It will also bind a user interface so we can play it, not only watch it.\nMaybe, you can think that the codebase of the class Game will be huge, but in practice, it should be very small. It will control the game by delegating tasks like user interface, world rendering, characters rendering, physics, to other highly specialized classes.\nThe presented example is a very simplified model of object oriented programming, or shortly OOP that shows the entire concept of this paradigm. It boils down to structuring the application as a group of highly specialized classes and connecting them in the way they will provide functionalities for our app.\nObject Oriented Programming for code grouping   Another way of looking at object oriented programming is a tool for grouping similar functionalities together.\n   UML2 class diagram for RenderUtils type  For example, our game may have a class RenderUtils, and this class is not mean to be instantiated, it also not meant to be extended by any subclasses. It just groups methods related to rendering, that other objects may invoke.\nObject oriented programming languages   There are not many strictly object oriented languages on the market. The most noticeable are Java and C#.\nMany other popular programming languages like Python, Ruby, ES6, Typescript, PHP, have built-in support for OOP. But, you can easily use these languages without coding any classes.\nIn most of the programming languages, the concept of OOP is optional, but in spite of it, it\u0026rsquo;s heavly used. That\u0026rsquo;s because of the possibility of keeping functionalities grouped in objects that make codebase so much easier to manage.\nCode generation   It\u0026rsquo;s worth mentioning that if you would be modeling your application the same way - using UML notation - you could generate a skeleton codebase, literally the entire structure of the classes right from the class diagrams.\nThere is nothing exciting in coding application model, and you can save time by just generating it from the UML class diagram.\nConclusion   This ends up, probably the simplest object oriented programming tutorial ever recorded.\nWhat OOP helps you to do is to focus on a small, single piece of application, without messing around with other parts.\nI\u0026rsquo;m personally a huge fan of the concept of OOP, and I hope you already see the value it provides to the world of programming.\nIf you are still struggling with understanding the concept of OOP, let me know in the comments below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAnd as always, stay focused!\n","permalink":"https://devakimbo.com/blog/what-is-object-oriented-programming/","tags":["Beginner","OOP"],"title":"What Is Object Oriented Programming"},{"categories":null,"contents":"So many people who start their way to web development ask this question, “which programming language is the best for web development”. There is a lot of confusion about this, and what web development is.\nLet’s decrypt what “web development” means first.\nWhat does “web development” actually mean?   Probably the simplest definition of web development is “it’s building websites”.\nSo we use HTML, CSS, and maybe some Javascript and create a website, and that’s it, right?\nWell, there is actually a bit more to it. There are web servers that generate HTML for us. There are CSS preprocessors. There are Javascript frameworks like Angular, React, and Vue. There is jQuery, PHP, Python, and everything else.\nYes, it’s all included in web development, and definition on Wikipedia confirms that.\nSo if you are after becoming a web developer, you have to find your way through all these technologies, choose something that makes sense, market value, and become master of your craft.\nIs web development means “a lot of money”?   I assume that at least half of your motivation to become a software developer is about money, and you heard that programmers earn up to $200k or so.\nWell, let’s look at some job board services like indeed.com, and you will notice something frightening. Most of the jobs for “web developer”, are paid far less than the average market. Do this experiment, and check what pops up. These positions don’t pay much. So I ask you not to call yourself a web developer ever. It will put bad karma on you.\nWeb developer means not much money in the bank.\nIs there any hope for web developers?   The good thing is you can still do web development and be well paid. How is that possible?\nYou can do it by being more specific. When you are a web developer, you are ambiguous, too generic, easy to replace with someone cheaper, because there are thousands of similar individuals. And they used to work for scraps.\nBut there are terms like frontend developer, backend developer, full stack Developer, DevOps and so on. These are the keywords where skills meet fat wallets, something that poor web developers can only dream of.\nWin good salary by being more specific   So if you plan to work in the web industry, ask yourself this question “what part of the web development I’m interested in?”\nIs it solving problems on the server-side or related to security? Is it building APIs? Is it test automation? Is it building amazing user interfaces, or being an expert in some fancy framework? These all sound like different universes, and they are.\nWhat programming language to learn for web development in 2021   Ok, we already have a clarity what web development is, we can focus on our theme question.\nThe thing is when you are just starting, everything is new, and programming is hard. So to make things simple, the best thing to do is to simplify things.\nAnd this is where many people do it wrong and fall into the trap made of frameworks like Django, Ruby on Rails, Laravel, or Node Express. These are great, they speed up the development process, but only when we have a foundation at a place.\nIf we know all the technologies that are involved undercovers, we can benefit from using these frameworks. Otherwise, you will get confused, acknowledge the failure, and announce it to everyone you meet “O yeah, I used to do programming, it’s a tough rocket”. Pretending that we know what we are talking about, which is total BS.\nAvoid preprocessors and frameworks based on them   The same thing with starting to learn ES6 or some other language that is preprocessed, and the actual code is generated on the other end. So skip any Javascript, CSS, and other preprocessors and generators. At this stage, your only code generators should be your own fingers.\nOk, so what actually learn to be successful?   If you want to learn programming for the web, the best thing to do is to learn fundamentals, which are HTML5, CSS, and Javascript, in that order.\nWhen you will get confident with using HTML blocks to structure websites, learn CSS to create layout and styling. Only then, when you know these two, it makes sense to start learning Javascript, which is the most popular language of the web, and in general.\nWhy? Because Javascript is language to program user interactions with the elements, server communication, and page structure manipulation. So before interaction with element could happen, there have to be an element first.\nJavascript also can help us do some animations and transitions, but before we jump into doing it with Javascript, we should know what the limitations of CSS are.\nMost of the styling, transitions, and animations can be done using CSS, so it’s good to know it well before we using Javascript as a tool for the wrong job. (sometimes we can create some effects that execute faster than CSS is processed as well). In website development, everything has its own place.\nIf you learn these three: HTML, CSS, and Javascript, that you can jump into learning a bit of server-side stack like Node, PHP, Python, or learn one of the modern Javascript frameworks like Angular, React, and Vue.\nIt’s pointless to start learning web programming with Angular, React, Vue, Django, Ruby on Rails, even if their documentation is impressive, and they are plenty of tutorials on the web. It’s pointless because you would not know what any of the terms there means.\nSo before jumping into deep water, build strong foundations first.\nThe best thing when you learn to do web development   The best thing about learning web development is that you can start earning money even if you know only HTML and CSS. You can find gigs and also full-time jobs while knowing only HTML, CSS, and Javascript. So you can get paid for getting more experience and learning things along the way.\nYou can also try working with platforms like Webflow, Squarespace, or Wix. And learn to craft better website designs while earning money as a freelancer.\nConclusion   If you expected I’m going to tell you that you should learn to React, Angular, or Vue, Python, or whatever, sorry for disappointing you. It’s just not the way it works.\nThere are some shortcuts to learn web development, and you are very lucky. You have all of these amazing learning resources available for you.\nWhen I started to learn to code, there were only books and little to no internet.\nSo use all the resources you can, but first, learn the basics, and then you can decide which other language or framework you will start learning next.\nSo this is my answer to the question “What Programming Language To Learn first For Web Development in 2021”, they are HTML, CSS, and Javascript in this order.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAnd as always, stay focused!\nDid you found this post helpful? Share it with others!\n","permalink":"https://devakimbo.com/blog/what-programming-language-to-learn-for-web-development-in-2021/","tags":["Programming","IT Career","Web Development"],"title":"What Programming Language to Learn for Web Development in 2021"},{"categories":null,"contents":"In this post, you will learn the 6 biggest reasons why you will probably fail to learn programming. But don\u0026rsquo;t get me wrong, there is nothing wrong with you. These are just the biggest and most common reasons why people fail to learn to code.\nBut as always, I will not only leave you with the list of problems. I will give you advice on how not to let them stop you.\nLet\u0026rsquo;s get started!\nReason 6 - focus on too advanced topics   When we are just starting, it\u0026rsquo;s so easy to jump into one of the fancy technology that many people are evangelizing over the internet. The problem is, it\u0026rsquo;s probably too advanced for the beginner. And you should build a strong foundation first before starting with these advanced topics.\nI know it easier said than done. We are living in the age of information, and there is no much noise around. If you type any programming language name on Google, you will get results that direct you on the land mine for beginners, the same with gurus on Youtube.\nThese people will gladly put you on the land mine because they earn money while doing that. Furthermore, often the course they are selling how to code in X, is the only thing they know, so they can\u0026rsquo;t tell you which language is the best because they know only one.\nWhen you are starting, you should definitely avoid and code preprocessors, anything that gets code X and render code Y, like ES6 and CSS preprocessors, if you are learning web development. Avoid them like the plague if you are a novice.\nWhat works the best for web development, is start by learning HTML, CSS, and Javascript, and then learn any framework you want like React, Angular, jQuery, Vue, or jump straight into server programming.\nMake things as simple as possible for you, so you will have much bigger chances to succeed.\nIf you want to learn more about starting to code for mobile app development, check out my post What Programming Language To Learn For App Development In 2021.\nIf you want more detail on learning to code for web development, check this post What Programming Language To Learn For Web Development in 2021.\nReason 5 - not enough coding, or no coding at all   Before you become a good coder, you have to give yourself a permission to be a bad coder. Every good programmer went through this process, sadly many of them, even after years, are still bad programmers.\nThe thing is if you want to learn to code by using tutorials, make sure the tutorial is made for someone with your level of knowledge, so you can put the new knowledge into practice immediately. You learn to code only by coding, there is no other way.\nThe right strategy is to read or watch tutorials and code along the way.\nThe easiest way to spot a tutorial that can be right for you is to search for particular keywords. Every programming language has some.\nFor web development, these are HTML5, HTML, CSS, CSS3, Javascript. And avoid any tutorial that contains anything else. There will be time for those later.\nOn the other hand, if you read a lot of tutorials, articles, watch programming gurus talking about how to do X, Y, and Z, and these topics are out of scope for you. You will not only not understand a single thing, but waste plenty of time.\nAlso, make sure you actually write the code. Reserve at least 30min, 1 hour every single day, and focus solely on coding, without descriptions. The more than better. When you do this for just a couple of weeks, you will get all the basics and beyond.\nThe little side note here. If you go into programming, coding should excite you. If you don\u0026rsquo;t enjoy any part of this process - other than money - maybe you should look for something else that will fit your preferences more accurately.\nReason 4 - chosen wrong technology   This is probably the biggest reason why I started Dev Akimbo. I get so annoyed by these self-proclaimed gurus that you can find all around the internet, telling people that to be a web developer, you have to learn Python, or Django, or PHP, or Node.js or anything else, totally not related to the core of web development.\nWeb development is about building websites, so the technologies that are involved are HTML, CSS, and Javascript. If you know these three, then you can learn how to build an app to run on the server that will generate HTML for you, and you can code it with Python, Java, C#, PHP, C++, Angular, React, Vue, or anything else, it doesn\u0026rsquo;t matter.\nAnd again, I know it\u0026rsquo;s very confusing at the beginning, we actually have to trust someone to move the needle. The solution is to avoid people who are trying to sell to the beginners' things proclaimed as basics while indeed there are not. This is especially true with web development.\nIf you focus only on fundamentals and stick to it until you are good at it, you set yourself for success.\nReason 3 - technology-market unfit   We can say this is related to \u0026ldquo;choosing wrong technology\u0026rdquo;, but I want to emphasize the market importance here.\nImagine the situation that you have invested plenty of time and maybe even money, and you become really good at technology X. But the market that you have access to has no demand for this kind of technology, or demand is in deficit. Even worse, the competition is height, and people compete by lowering their rates.\nThere are good reasons why there are so many experts in Magento, PHP, Wordpress, and C# in Asia. If you are in that market, maybe you should verify if your career plan matches the market opportunities that are available for you. It\u0026rsquo;s possible that if you show up as a React or Python expert, there will be no place for you. On the other hand, with this technology set, you would be in height demand in Europe and the US.\nIf your eyes shined bright on the think about coding in Magento, PHP, Wordpress, or C#, please keep in mind that these are advanced stuff. Do yourself a favor and learn the basics first HTML, CSS, Javascript.\nReason 2 - the belief that somebody can learn to code for you   I already mention \u0026ldquo;not enough coding, or no coding at all\u0026rdquo; as one of the biggest sins of programming beginners. This one is related, but it\u0026rsquo;s more about mindset.\nProbably all of us make this mistake in different parts of our lives, and it\u0026rsquo;s not our fault. The schooling system taught us that we should be in the passenger seat, and learning will happen to us while we read and watch rather than create.\nThe truth is that no matter how many videos on Youtube related to coding you will watch, how many tutorials you will read, or how many books you will read; this data wouldn\u0026rsquo;t build your knowledge.\nThe only way to learn to code and get the programmer knowledge is actually to do coding. So if the tutorial that you are reading or watching doesn\u0026rsquo;t make you coding at the same time or right after, you shouldn\u0026rsquo;t spend your time on that piece of content.\nWhile learning to code, you should only look for specific tutorials that will let you code along the way and learn while following the process.\nReason 1 - copy \u0026amp; paste + autocompletion   So why to type all of these characters if I can just mark from here to here and copy \u0026amp; paste, and I can save plenty of time? That\u0026rsquo;s smart, right?\nWell, it isn\u0026rsquo;t. The reason why you want to type all of these characters is that you want to learn. You don\u0026rsquo;t want to save the number of keystrokes. You want to learn how to code. When you copy \u0026amp; paste, you don\u0026rsquo;t learn anything.\nThe same applies to autocompletion in a code editor. Autocompletion is a great feature to speed up the development process, but it\u0026rsquo;s a terrible disruptor when we try to learn to code. There will be the right moment to use it in the future.\nActually, that advice is valid for learning any new programming language. Disable autocompletion in your editor and forget about the copy and paste. This will make a huge difference in your progress.\nConclusion   So these are 6 biggest reasons why people fail to learn programming.\nNow you not only know them but you also know how to avoid them.\nIf you have any questions related to this video, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAnd as always, stay focused!\n","permalink":"https://devakimbo.com/blog/the-6-biggest-reasons-why-you-will-fail-to-learn-programming/","tags":["App Development","Beginner","Web Development"],"title":"The 6 Biggest Reasons Why You Will Fail to Learn Programming"},{"categories":null,"contents":"As you probably already know, there are two important platforms in mobile apps development. iOS and Android (there is also Windows, but nobody cares). To be considered that you are a mobile app developer, you have to know how to build apps for at least one of them.\nWhen you start to advertise your skills as a mobile app developer, people will think that you know both platforms. The funny thing is, most people don\u0026rsquo;t know the difference.\nOk, but iOS and Android are totally different platforms, with different codebases, and build upon different architecture principles. How to start learning to code for mobile and not get overwhelmed by that?\nChoose the platform   If you just starting with mobile app development, I would choose the platform first iOS or Android and then select tech stack.\nThe choice depends on many factors, from personal preferences, hardware availability (iOS development requires OS X), and available market opportunities.\nChoosing a single platform at the beginning is critically important for mobile development because iOS and Android systems work in a totally different way, and they utilize a different set of tools and programming languages.\nPure iOS developer scenario   Let\u0026rsquo;s assume I have a Macbook, and I want to learn how to build mobile apps for iOS. I hate Android (which isn\u0026rsquo;t true), and as far as I know, I wouldn\u0026rsquo;t want to code for Android ever. There is also a market for iOS development services that are within my reach and stable demand for native iOS apps. Then I would start learning Swift.\nThis scenario may sound reasonable at this point when there are plenty of well-paid opportunities for Swift developers. Also being so specialized can help you get customers, or land a job. The competition is not so fierce as for some other technologies.\nApple is taking care of the stuff for you   You can be sure that Apple would not abandon Swift language for any reason. As long as they are interested in bringing more and better developers to their platforms, they will continue investing in Swift and related tools as they used to do.\nOther benefits of learning native platform language   Learning to code in close to native platform language will let you create more advanced applications, tune-up performance, create any user interface you can imagine, and build any app you like. It will also let you port applications written for other platforms like games. (the same is possible with native Android)\nAs you see, learning to code in Swift can be a good idea if you want to become a pure iOS developer. But even if you took this article because of iOS, keep reading it further to not fall into common pitfalls for beginners.\nWhy not Objective-C?   When Swift showed up, the Objective-C become the language of last resort. iOS developers fall back to it when there is no other way to particular code pieces of an app in another way.\nIf you browsed Objective-C code, you would notice that it\u0026rsquo;s semantic is extraordinary and challenging to read. That\u0026rsquo;s why the Swift was made as a language that looks more like any other object-oriented language on the market, so more people would be interested in giving the entire iOS and OS X development a shot.\nPure Android developer scenario   On the other hand, if you, for whatever reason, don\u0026rsquo;t plan to code for iOS, and you want to focus on Android only, then starting to learn to code in Java sounds like a good plan.\nWhy start with Java instead of Android?\nCoding for Android is coding in Java, so the best way to get your foot into Android development is to learn the basics of Java development and then add the Android environment into it.\nIn case of learning to code for Android, all the rules for iOS applies here, as well. There has to be a market demand for this kind of service. So before jumping on board, due diligence if the market that\u0026rsquo;s available for you looks promising.\nWhat about React Native, Flutter, and others?   You maybe already started asking this question, why I didn\u0026rsquo;t mention probably the most well known mobile technologies these days like React Native and Flutter. Do I even hear about them? Yes, I did.\nThe main reason is, I wrote this article to help beginners get up their minds about the first mobile programming language to invest in. Neither, React Native, nor Flutter fits in.\nYes, there are plenty of people that are very loud about these technologies all over the internet. But these technologies aren\u0026rsquo;t meant for beginners.\nLet\u0026rsquo;s assume you are starting your mobile development journey by learning React Native.\nWhat you actually would learn is ES6 programming language, which is a superset of Javascript. You will learn React Native API, for sure. But the problem is, you wouldn\u0026rsquo;t learn anything related to Android or iOS development because all of the coding for these platforms are covered with another level of abstraction ES6.\nInstead of learning how to code for particular platform, you will learn to code in abstraction above all the platforms. As a result, you will know none of them.\nIf you want to argue with me that, but \u0026ldquo;I can code once and use everywhere\u0026rdquo;, or \u0026ldquo;React Native and Flutter was created to speed up the development process, and it\u0026rsquo;s a modern way to go\u0026rdquo;. I will agree with you. Yes, this is way to go, if you know the basic of the platform you are building app for.\nIf you are fresh to mobile app development, or even fresh to programming in general, starting with these frameworks will just add plenty of unnecessary things on the stack that you will have to learn to do the same thing.\nYou will still need to know the basics of building apps for Android or iOS if you decide to use these frameworks, and you will need to know the framework as well.\nThe good part is, you don\u0026rsquo;t have to learn the basics for too long before starting using frameworks like React Native or Flutter if you insist on doing so. Just learn enough, so you could develop a mobile app, with basic functions, and then you can start learning these frameworks if you fill that you are ready.\nBut I want to give React Native or Flutter a try now   If you already decided that you will not want to learn native mobile languages and you want to jump straight into modern frameworks, as of 2021, there is a window of opportunity for that.\nBut first, the best advice I can give you is\u0026hellip;\nDo not start with React Native.   That\u0026rsquo;s because learning React Native is hard for beginners. It\u0026rsquo;s much harder than just learning React. You will have to know so many things that are not even related to mobile app development that your chances to become a programmer will crumble.\nIt is not a new technology, and many people know it and are good at it, so there is a competition.\nAlso, if you check offers at job boards, you will notice that most of the positions for React Native require you also to know native mobile languages, so you can\u0026rsquo;t hide behind React Native.\nAs of 2021, is it better to start with the Flutter?   Flutter is new, and this is his biggest, if not only strength.\nIt\u0026rsquo;s so new that it\u0026rsquo;s almost impossible to find people who are experts at this framework, and it\u0026rsquo;s relatively easy to become one.\nThe new job offers pop up quite frequently. So if you are thinking seriously about Flutter, now it\u0026rsquo;s the best time to get all in. The entry-level is low (especially comparing to React Native) to get your first job or gig.\nIt won\u0026rsquo;t be an easy ride. You will have to learn programming in Dart, plus Android, iOS or both along the way. It\u0026rsquo;s doable, but I don\u0026rsquo;t recommend it if you are a novice.\nIt will be a very hard, blind ride, full of frustrations, confusions, and failures without even understanding what caused them. So the probability of becoming a mobile programmer starting with the Flutter is low.\nThere is very little chance you will use Dart for anything outside Flutter because there are no market opportunities for Dart experts.\nIf at any point, you will decide to switch your interest to web development, frontend, backend, or anything else, you will probably not find any use for Dart and soon forget the language.\nAs you see, even if Flutter is the better option for beginners than React Native, it\u0026rsquo;s still a bad option.\nWhat about platforms like Xamain and Ionic?   The other possible options to make a career in mobile app development are platforms like Xamain and Ionic.\nXamarin could be for you if you already know how to code in C#, or your career plan C# programming. Otherwise, it will force you to learn mobile development basics plus C# and Xamarin itself. The same with Flutter, React Native, and other wrappers.\nThe Ionic, on the other hand, becomes more unrelated when React Native shown up. You wouldn\u0026rsquo;t find any interest in the market for it, so this platform is already dead, but deny to acknowledge that. They try to be related by providing React and Angular integrations, but why would anyone need another man in the middle? They already lost the game.\nConclusion   If we are just starting oftentimes, it\u0026rsquo;s challenging to decide which way would be the best. You can find people all over the internet who will scream that the language X or framework Y is the best choice because they know only that particular one. The reality doesn\u0026rsquo;t work this way.\nIf you want to build a marketing advantage and invest your time and money with something that will last, and you can reuse many times over, throughout your career, my answer for mobile app development are native languages.\nIf you have any questions related to apps development, leave the comment below.\nIf you found this post helpful, consider sharing it, so I will be motivated to publish more posts that will help you get the IT career you want.\nAnd as always, stay focused!\n","permalink":"https://devakimbo.com/blog/what-programming-language-to-learn-for-app-development-in-2021/","tags":["Android","App Development","Flutter","Ionic","iOS","Mobile","React Native","Xamarin","Programming","IT Career"],"title":"What Programming Language to Learn for App Development in 2021"},{"categories":null,"contents":"","permalink":"https://devakimbo.com/404/","tags":null,"title":"404"},{"categories":null,"contents":"To contact us please use the contact form below. We will reply to you shortly.\nLoading…  ","permalink":"https://devakimbo.com/contact/","tags":null,"title":"Contact Us"},{"categories":null,"contents":"We want to give credit and acknowledge to vendors who provided assets to make it possible to create this website the way it looks.\n Business vector created by freepik - www.freepik.com Business vector created by makyzz - www.freepik.com  ","permalink":"https://devakimbo.com/credits/","tags":null,"title":"Credits"}]